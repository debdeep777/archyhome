!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
) awesome.quit	.config/awesome/awesome/rc.lua	/^    { "quit", function() awesome.quit() end }$/;"	f
) awesome.quit	.config/awesome/rc.lua	/^    { "quit", function() awesome.quit() end }$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/rainbow/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/rainbow/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/rainbow/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/rainbow/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/steamburn/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/steamburn/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/steamburn/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome-simpler/themes/steamburn/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.layout.inc	.config/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/rainbow/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.layout.inc	.config/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 1, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 3, function() awful.layout.inc(-1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 4, function() awful.layout.inc(1) end),$/;"	f
) awful.layout.inc	.config/awesome/themes/steamburn/theme.lua	/^                           awful.button({}, 5, function() awful.layout.inc(-1) end)))$/;"	f
) awful.spawn	.config/awesome-simpler/themes/powerarrow/theme.lua	/^scissors:buttons(awful.util.table.join(awful.button({}, 1, function() awful.spawn("xsel | xsel -i -b") end)))$/;"	f
) awful.spawn	.config/awesome-simpler/themes/vertex/theme.lua	/^wificon:connect_signal("button::press", function() awful.spawn(string.format("%s -e wavemon", awful.util.terminal)) end)$/;"	f
) awful.spawn	.config/awesome/awesome/themes/vertex/theme.lua	/^wificon:connect_signal("button::press", function() awful.spawn(string.format("%s -e wavemon", awful.util.terminal)) end)$/;"	f
) awful.spawn	.config/awesome/themes/vertex/theme.lua	/^wificon:connect_signal("button::press", function() awful.spawn(string.format("%s -e wavemon", awful.util.terminal)) end)$/;"	f
) awful.spawn.with_shell	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^scissors:buttons(my_table.join(awful.button({}, 1, function() awful.spawn.with_shell("xsel | xsel -i -b") end)))$/;"	f
) awful.spawn.with_shell	.config/awesome/awesome/themes/powerarrow/theme.lua	/^scissors:buttons(my_table.join(awful.button({}, 1, function() awful.spawn.with_shell("xsel | xsel -i -b") end)))$/;"	f
) awful.spawn.with_shell	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^scissors:buttons(my_table.join(awful.button({}, 1, function() awful.spawn.with_shell("xsel | xsel -i -b") end)))$/;"	f
) awful.spawn.with_shell	.config/awesome/themes/powerarrow/theme.lua	/^scissors:buttons(my_table.join(awful.button({}, 1, function() awful.spawn.with_shell("xsel | xsel -i -b") end)))$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome-simpler/themes/holo/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome-simpler/themes/vertex/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome/awesome/themes/holo/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome/awesome/themes/vertex/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome/themes/holo/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) awful.util.mymainmenu:toggle	.config/awesome/themes/vertex/theme.lua	/^mylauncher:connect_signal("button::press", function() awful.util.mymainmenu:toggle() end)$/;"	f
) c:kill	.config/awesome/awesome/rc.lua	/^        awful.button({ }, 2, function() c:kill() end),$/;"	f
) c:kill	.config/awesome/rc.lua	/^        awful.button({ }, 2, function() c:kill() end),$/;"	f
) menubar.show	.config/awesome/awesome/rc.lua	/^    awful.key({ modkey }, "p", function() menubar.show() end,$/;"	f
) menubar.show	.config/awesome/rc.lua	/^    awful.key({ modkey }, "p", function() menubar.show() end,$/;"	f
) os.execute	.config/awesome/awesome/rc.lua	/^    awful.key({ altkey }, "p", function() os.execute("screenshot") end,$/;"	f
) os.execute	.config/awesome/rc.lua	/^    awful.key({ altkey }, "p", function() os.execute("screenshot") end,$/;"	f
ADDCH	gtypist.c	137;"	d	file:
ADDCH_REV	gtypist.c	138;"	d	file:
ADDSTR	gtypist.c	135;"	d	file:
ADDSTR_REV	gtypist.c	136;"	d	file:
ATABLE	gtypist.c	/^tabl ATABLE[END_ASC - ST_ASC + 1]; \/\/ total number of characters to track$/;"	v
BB.create	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB.create(url, builder)$/;"	f
BB:_getBuildStatus	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:_getBuildStatus(result)$/;"	f
BB:_queryBuildbot	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:_queryBuildbot(build_number)$/;"	f
BB:getBuilder	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:getBuilder()$/;"	f
BB:getCurrent	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:getCurrent()$/;"	f
BB:getCurrentStatus	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:getCurrentStatus()$/;"	f
BB:getError	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:getError()$/;"	f
BB:getLastSuccessful	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:getLastSuccessful()$/;"	f
BB:refresh	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^function BB:refresh()$/;"	f
BESTLOG_FILENAME	gtypist.c	123;"	d	file:
BESTLOG_FILENAME	gtypist.c	125;"	d	file:
B_TOP_LINE	gtypist.c	77;"	d	file:
CONFIRM_EXIT_LESSON_MSG	gtypist.c	/^char *CONFIRM_EXIT_LESSON_MSG;$/;"	v
COPYRIGHT	gtypist.c	/^char *COPYRIGHT;$/;"	v
CTRL_OFFSET	gtypist.c	188;"	d	file:
DATADIR	gtypist.c	113;"	d	file:
DATADIR	gtypist.c	116;"	d	file:
DEFAULT_SCRIPT	gtypist.c	120;"	d	file:
DP_TOP_LINE	gtypist.c	80;"	d	file:
DRILL_CH_ERR	gtypist.c	92;"	d	file:
DRILL_NL_ERR	gtypist.c	93;"	d	file:
END_ASC	gtypist.c	238;"	d	file:
ERROR_TOO_HIGH_MSG	gtypist.c	/^char *ERROR_TOO_HIGH_MSG;$/;"	v
Err 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function Err (msg)$/;"	f
Err 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function Err (msg)$/;"	f
Err 	.config/awesome/lain/util/dkjson.lua	/^  local function Err (msg)$/;"	f
ErrorCall 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function ErrorCall (str, pos, msg, state)$/;"	f
ErrorCall 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function ErrorCall (str, pos, msg, state)$/;"	f
ErrorCall 	.config/awesome/lain/util/dkjson.lua	/^  local function ErrorCall (str, pos, msg, state)$/;"	f
Findcomplete	.vim/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P)$/;"	f
Helptags	.vim/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
I_TOP_LINE	gtypist.c	79;"	d	file:
MAX	gtypist.c	143;"	d	file:
MESSAGE_LINE	gtypist.c	76;"	d	file:
MIN	gtypist.c	142;"	d	file:
MODE_DRILL	gtypist.c	/^char *MODE_DRILL;$/;"	v
MODE_QUERY	gtypist.c	/^char *MODE_QUERY;$/;"	v
MODE_SPEEDTEST	gtypist.c	/^char *MODE_SPEEDTEST;$/;"	v
MODE_TUTORIAL	gtypist.c	/^char *MODE_TUTORIAL;$/;"	v
NFKEYS	gtypist.c	183;"	d	file:
NO_SKIP_MSG	gtypist.c	/^char *NO_SKIP_MSG;$/;"	v
NUM_COLOURS	gtypist.c	132;"	d	file:
QUERY_N	gtypist.c	91;"	d	file:
QUERY_Y	gtypist.c	90;"	d	file:
REPEAT_EXIT_MSG	gtypist.c	/^char *REPEAT_EXIT_MSG;$/;"	v
REPEAT_NEXT_EXIT_MSG	gtypist.c	/^char *REPEAT_NEXT_EXIT_MSG;$/;"	v
RETURN_CHARACTER	gtypist.c	68;"	d	file:
RNE	gtypist.c	/^wchar_t *RNE;$/;"	v
SKIPBACK_VIA_F_MSG	gtypist.c	/^char *SKIPBACK_VIA_F_MSG;$/;"	v
SPEED_ADJ_CPM	gtypist.c	/^char *SPEED_ADJ_CPM;$/;"	v
SPEED_ADJ_WPM	gtypist.c	/^char *SPEED_ADJ_WPM;$/;"	v
SPEED_BEST_CPM	gtypist.c	/^char *SPEED_BEST_CPM;$/;"	v
SPEED_BEST_NEW_MSG	gtypist.c	/^char *SPEED_BEST_NEW_MSG;$/;"	v
SPEED_BEST_WPM	gtypist.c	/^char *SPEED_BEST_WPM;$/;"	v
SPEED_LINE	gtypist.c	81;"	d	file:
SPEED_PCT_ERROR	gtypist.c	/^char *SPEED_PCT_ERROR;$/;"	v
SPEED_RAW_CPM	gtypist.c	/^char *SPEED_RAW_CPM;$/;"	v
SPEED_RAW_WPM	gtypist.c	/^char *SPEED_RAW_WPM;$/;"	v
ST_ASC	gtypist.c	237;"	d	file:
T_TOP_LINE	gtypist.c	78;"	d	file:
UTF16BMP 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function UTF16BMP (hex)$/;"	f
UTF16BMP 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function UTF16BMP (hex)$/;"	f
UTF16BMP 	.config/awesome/lain/util/dkjson.lua	/^  local function UTF16BMP (hex)$/;"	f
UTF16Surrogate 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function UTF16Surrogate (match, pos, high, low)$/;"	f
UTF16Surrogate 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function UTF16Surrogate (match, pos, high, low)$/;"	f
UTF16Surrogate 	.config/awesome/lain/util/dkjson.lua	/^  local function UTF16Surrogate (match, pos, high, low)$/;"	f
Ve	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WAIT_MESSAGE	gtypist.c	/^char *WAIT_MESSAGE;$/;"	v
YN	gtypist.c	/^wchar_t *YN;$/;"	v
_	gtypist.c	56;"	d	file:
__tojson 	.config/awesome-simpler/lain/util/dkjson.lua	/^  __tojson = function () return "null" end$/;"	f
__tojson 	.config/awesome/awesome/lain/util/dkjson.lua	/^  __tojson = function () return "null" end$/;"	f
__tojson 	.config/awesome/lain/util/dkjson.lua	/^  __tojson = function () return "null" end$/;"	f
a, b) return string.byte	.config/awesome-simpler/freedesktop/menu.lua	/^        table.sort(result, function(a, b) return string.byte(a[1]) < string.byte(b[1]) end)$/;"	f
a, b) return string.byte	.config/awesome/awesome/freedesktop/menu.lua	/^        table.sort(result, function(a, b) return string.byte(a[1]) < string.byte(b[1]) end)$/;"	f
a, b) return string.byte	.config/awesome/freedesktop/menu.lua	/^        table.sort(result, function(a, b) return string.byte(a[1]) < string.byte(b[1]) end)$/;"	f
addnewline2 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function addnewline2 (level, buffer, buflen)$/;"	f
addnewline2 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function addnewline2 (level, buffer, buflen)$/;"	f
addnewline2 	.config/awesome/lain/util/dkjson.lua	/^local function addnewline2 (level, buffer, buflen)$/;"	f
addpair 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function addpair (key, value, prev, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
addpair 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function addpair (key, value, prev, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
addpair 	.config/awesome/lain/util/dkjson.lua	/^local function addpair (key, value, prev, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
addtolist	gtypist.c	/^void addtolist(char data)$/;"	f
alsa.update	.config/awesome-simpler/lain/widget/alsa.lua	/^    function alsa.update()$/;"	f
alsa.update	.config/awesome/awesome/lain/widget/alsa.lua	/^    function alsa.update()$/;"	f
alsa.update	.config/awesome/lain/widget/alsa.lua	/^    function alsa.update()$/;"	f
alsabar.notify	.config/awesome-simpler/lain/widget/alsabar.lua	/^    function alsabar.notify()$/;"	f
alsabar.notify	.config/awesome/awesome/lain/widget/alsabar.lua	/^    function alsabar.notify()$/;"	f
alsabar.notify	.config/awesome/lain/widget/alsabar.lua	/^    function alsabar.notify()$/;"	f
alsabar.update	.config/awesome-simpler/lain/widget/alsabar.lua	/^    function alsabar.update(callback)$/;"	f
alsabar.update	.config/awesome/awesome/lain/widget/alsabar.lua	/^    function alsabar.update(callback)$/;"	f
alsabar.update	.config/awesome/lain/widget/alsabar.lua	/^    function alsabar.update(callback)$/;"	f
append_ul	.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
appendcustom	.config/awesome-simpler/lain/util/dkjson.lua	/^local function appendcustom(res, buffer, state)$/;"	f
appendcustom	.config/awesome/awesome/lain/util/dkjson.lua	/^local function appendcustom(res, buffer, state)$/;"	f
appendcustom	.config/awesome/lain/util/dkjson.lua	/^local function appendcustom(res, buffer, state)$/;"	f
arrange	.config/awesome/awesome/lain/layout/centerwork.lua	/^local function arrange(p, layout)$/;"	f
arrange	.config/awesome/lain/layout/centerwork.lua	/^local function arrange(p, layout)$/;"	f
ask	.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask_no_interrupt	.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
assign_name	.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
async({ awful.util.shell, "-c", string.format("ps -p %d -o pid	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^    async({ awful.util.shell, "-c", string.format("ps -p %d -o pid=", redshift.pid) }, function(f)$/;"	f
async({ awful.util.shell, "-c", string.format("ps -p %d -o pid	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^    async({ awful.util.shell, "-c", string.format("ps -p %d -o pid=", redshift.pid) }, function(f)$/;"	f
async({ awful.util.shell, "-c", string.format("ps -p %d -o pid	.config/awesome/lain/widget/contrib/redshift.lua	/^    async({ awful.util.shell, "-c", string.format("ps -p %d -o pid=", redshift.pid) }, function(f)$/;"	f
awesome_pid	.myscr/awf	/^function awesome_pid() $/;"	f
awful.key({ modkey,           }, "t",      function (c) c.ontop 	.config/awesome/awesome/rc.lua	/^    awful.key({ modkey,           }, "t",      function (c) c.ontop = not c.ontop            end,$/;"	f
awful.key({ modkey,           }, "t",      function (c) c.ontop 	.config/awesome/rc.lua	/^    awful.key({ modkey,           }, "t",      function (c) c.ontop = not c.ontop            end,$/;"	f
awful.tag.new 	.config/awesome-simpler/eminent/init.lua	/^awful.tag.new = function (names, screen, layout)$/;"	f
awful.widget.taglist.filter.all 	.config/awesome-simpler/eminent/init.lua	/^awful.widget.taglist.filter.all = function (t, args)$/;"	f
awful.widget.taglist.filter.all 	.config/awesome-simpler/themes/copland/theme.lua	/^awful.widget.taglist.filter.all = function (t, args)$/;"	f
awful.widget.taglist.filter.all 	.config/awesome/awesome/themes/copland/theme.lua	/^awful.widget.taglist.filter.all = function (t, args)$/;"	f
awful.widget.taglist.filter.all 	.config/awesome/themes/copland/theme.lua	/^awful.widget.taglist.filter.all = function (t, args)$/;"	f
bang	.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
banner	gtypist.c	/^void banner (const char *text)$/;"	f
bar	.vim/autoload/plug.vim	/^function! s:bar()$/;"	f
bat.get_batteries	.config/awesome/awesome/lain/widget/bat.lua	/^    function bat.get_batteries()$/;"	f
bat.get_batteries	.config/awesome/lain/widget/bat.lua	/^    function bat.get_batteries()$/;"	f
bat.update	.config/awesome-simpler/lain/widget/bat.lua	/^    function bat.update()$/;"	f
bat.update	.config/awesome/awesome/lain/widget/bat.lua	/^    function bat.update()$/;"	f
bat.update	.config/awesome/lain/widget/bat.lua	/^    function bat.update()$/;"	f
bat:get	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^    function bat:get(item)$/;"	f
bat:installed	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^    function bat:installed()$/;"	f
bat:percent	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^    function bat:percent()$/;"	f
bat:remaining_time	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^    function bat:remaining_time()$/;"	f
bat:status	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^    function bat:status()$/;"	f
batchfile	.vim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
binclock.dec2bin	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^function binclock.dec2bin(num, bits)$/;"	f
binclock.dec2bin	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^function binclock.dec2bin(num, bits)$/;"	f
binclock.dec2bin	.config/awesome/themes/powerarrow/binclock.lua	/^function binclock.dec2bin(num, bits)$/;"	f
binclock.paintdot	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^function binclock.paintdot(cr, val, shift)$/;"	f
binclock.paintdot	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^function binclock.paintdot(cr, val, shift)$/;"	f
binclock.paintdot	.config/awesome/themes/powerarrow/binclock.lua	/^function binclock.paintdot(cr, val, shift)$/;"	f
bind_F12	gtypist.c	/^void bind_F12 (const char *label)$/;"	f
bool	gtypist.c	72;"	d	file:
border_adjust	.config/awesome/awesome/rc.lua	/^function border_adjust(c)$/;"	f
border_adjust	.config/awesome/rc.lua	/^function border_adjust(c)$/;"	f
btc_all.async	.config/awesome-simpler/vicious/contrib/btc_all.lua	/^function btc_all.async(format, warg, callback)$/;"	f
cal.attach	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.attach(widget)$/;"	f
cal.attach	.config/awesome/lain/widget/cal.lua	/^    function cal.attach(widget)$/;"	f
cal.build	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.build(month, year)$/;"	f
cal.build	.config/awesome/lain/widget/cal.lua	/^    function cal.build(month, year)$/;"	f
cal.getdate	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.getdate(month, year, offset)$/;"	f
cal.getdate	.config/awesome/lain/widget/cal.lua	/^    function cal.getdate(month, year, offset)$/;"	f
cal.hide	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.hide()$/;"	f
cal.hide	.config/awesome/lain/widget/cal.lua	/^    function cal.hide()$/;"	f
cal.hover_on	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.hover_on() cal.show(0) end$/;"	f
cal.hover_on	.config/awesome/lain/widget/cal.lua	/^    function cal.hover_on() cal.show(0) end$/;"	f
cal.move	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.move(offset)$/;"	f
cal.move	.config/awesome/lain/widget/cal.lua	/^    function cal.move(offset)$/;"	f
cal.next	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.next() cal.move( 1) end$/;"	f
cal.next	.config/awesome/lain/widget/cal.lua	/^    function cal.next() cal.move( 1) end$/;"	f
cal.prev	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.prev() cal.move(-1) end$/;"	f
cal.prev	.config/awesome/lain/widget/cal.lua	/^    function cal.prev() cal.move(-1) end$/;"	f
cal.show	.config/awesome/awesome/lain/widget/cal.lua	/^    function cal.show(timeout, month, year, scr)$/;"	f
cal.show	.config/awesome/lain/widget/cal.lua	/^    function cal.show(timeout, month, year, scr)$/;"	f
calendar.attach	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.attach(widget)$/;"	f
calendar.hide	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.hide()$/;"	f
calendar.hover_off	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.hover_off() calendar.hide() end$/;"	f
calendar.hover_on	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.hover_on() calendar.show(0) end$/;"	f
calendar.next	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.next() calendar.show(0, 1) end$/;"	f
calendar.prev	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.prev() calendar.show(0, -1) end$/;"	f
calendar.show	.config/awesome-simpler/lain/widget/calendar.lua	/^function calendar.show(t_out, inc_offset, scr)$/;"	f
callback   	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^        callback   = function()$/;"	f
callback   	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^        callback   = function()$/;"	f
callback   	.config/awesome/themes/powerarrow/binclock.lua	/^        callback   = function()$/;"	f
cascade.arrange	.config/awesome-simpler/lain/layout/cascade.lua	/^function cascade.arrange(p)$/;"	f
cascade.arrange	.config/awesome/awesome/lain/layout/cascade.lua	/^function cascade.arrange(p)$/;"	f
cascade.arrange	.config/awesome/lain/layout/cascade.lua	/^function cascade.arrange(p)$/;"	f
cascade.tile.arrange	.config/awesome-simpler/lain/layout/cascade.lua	/^function cascade.tile.arrange(p)$/;"	f
cascade.tile.arrange	.config/awesome/awesome/lain/layout/cascade.lua	/^function cascade.tile.arrange(p)$/;"	f
cascade.tile.arrange	.config/awesome/lain/layout/cascade.lua	/^function cascade.tile.arrange(p)$/;"	f
catcher	gtypist.c	/^catcher( int signal ) {$/;"	f	file:
cbs[#cbs + 1] 	.config/awesome/awesome/lain/util/menu_iterator.lua	/^                    cbs[#cbs + 1] = rejected_cb and function() rejected_cb(ch) end or nil$/;"	f
cbs[#cbs + 1] 	.config/awesome/awesome/lain/util/menu_iterator.lua	/^                    cbs[#cbs + 1] = selected_cb and function() selected_cb(ch) end or nil$/;"	f
cbs[#cbs + 1] 	.config/awesome/lain/util/menu_iterator.lua	/^                    cbs[#cbs + 1] = rejected_cb and function() rejected_cb(ch) end or nil$/;"	f
cbs[#cbs + 1] 	.config/awesome/lain/util/menu_iterator.lua	/^                    cbs[#cbs + 1] = selected_cb and function() selected_cb(ch) end or nil$/;"	f
centerwork.arrange	.config/awesome-simpler/lain/layout/centerwork.lua	/^function centerwork.arrange(p)$/;"	f
centerwork.arrange	.config/awesome/awesome/lain/layout/centerwork.lua	/^function centerwork.arrange(p)$/;"	f
centerwork.arrange	.config/awesome/lain/layout/centerwork.lua	/^function centerwork.arrange(p)$/;"	f
centerwork.horizontal.arrange	.config/awesome-simpler/lain/layout/centerwork.lua	/^function centerwork.horizontal.arrange(p)$/;"	f
centerwork.horizontal.arrange	.config/awesome/awesome/lain/layout/centerwork.lua	/^function centerwork.horizontal.arrange(p)$/;"	f
centerwork.horizontal.arrange	.config/awesome/lain/layout/centerwork.lua	/^function centerwork.horizontal.arrange(p)$/;"	f
centerwork.horizontal.mouse_resize_handler	.config/awesome/awesome/lain/layout/centerwork.lua	/^function centerwork.horizontal.mouse_resize_handler(c, corner, x, y)$/;"	f
centerwork.horizontal.mouse_resize_handler	.config/awesome/lain/layout/centerwork.lua	/^function centerwork.horizontal.mouse_resize_handler(c, corner, x, y)$/;"	f
centerwork.mouse_resize_handler	.config/awesome/awesome/lain/layout/centerwork.lua	/^function centerwork.mouse_resize_handler(c, corner, x, y)$/;"	f
centerwork.mouse_resize_handler	.config/awesome/lain/layout/centerwork.lua	/^function centerwork.mouse_resize_handler(c, corner, x, y)$/;"	f
check_ruby	.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
checkout	.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
chsh	.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
cl_banner_bg_colour	gtypist.c	/^static int	cl_banner_bg_colour = 0;	\/\/ since we display them in$/;"	v	file:
cl_banner_fg_colour	gtypist.c	/^static int	cl_banner_fg_colour = 6;	\/\/ inverse video, fg is bg$/;"	v	file:
cl_bgcolour	gtypist.c	/^static int	cl_bgcolour = 0;		\/* bg colour *\/$/;"	v	file:
cl_colour	gtypist.c	/^static bool	cl_colour = FALSE;		\/* set if -c given *\/$/;"	v	file:
cl_curs_flash	gtypist.c	/^static int	cl_curs_flash = 10;		\/* cursor flash period *\/$/;"	v	file:
cl_default_error_max	gtypist.c	/^static float	cl_default_error_max = 3.0;	\/* maximum error percentage *\/$/;"	v	file:
cl_error_max_specified	gtypist.c	/^static bool     cl_error_max_specified = FALSE; \/* is --error-max specified? *\/$/;"	v	file:
cl_fgcolour	gtypist.c	/^static int	cl_fgcolour = 7;		\/* fg colour *\/$/;"	v	file:
cl_menu_title_colour	gtypist.c	/^static int	cl_menu_title_colour = 7;$/;"	v	file:
cl_no_skip	gtypist.c	/^static bool     cl_no_skip = FALSE;             \/* forbid the user to *\/$/;"	v	file:
cl_notimer	gtypist.c	/^static bool	cl_notimer = FALSE;		\/* no timings in drills *\/$/;"	v	file:
cl_personal_best	gtypist.c	/^static bool	cl_personal_best = FALSE;	\/* track personal best speeds *\/$/;"	v	file:
cl_prog_name_colour	gtypist.c	/^static int	cl_prog_name_colour = 5;	\/\/ and vice versa.$/;"	v	file:
cl_prog_version_colour	gtypist.c	/^static int 	cl_prog_version_colour = 1;$/;"	v	file:
cl_rev_video_errors	gtypist.c	/^static bool	cl_rev_video_errors = FALSE;    \/* reverse video for errors *\/$/;"	v	file:
cl_scoring_cpm	gtypist.c	/^static bool	cl_scoring_cpm = FALSE;		\/* Chars-per-minute scoring *\/$/;"	v	file:
cl_silent	gtypist.c	/^static bool	cl_silent = FALSE;		\/* no beep on errors *\/$/;"	v	file:
cl_start_label	gtypist.c	/^static char	*cl_start_label = NULL;		\/* initial lesson start point*\/$/;"	v	file:
cl_term_cursor	gtypist.c	/^static bool	cl_term_cursor = FALSE;		\/* don't do s\/w cursor *\/$/;"	v	file:
cl_wp_emu	gtypist.c	/^static bool	cl_wp_emu = FALSE;		\/* do wp-like stuff *\/$/;"	v	file:
clean	.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
cleanup	.myscr/pipes.sh	/^cleanup() {$/;"	f
client.connect_signal("unfocus", function(c) c.border_color 	.config/awesome/awesome/rc.lua	/^client.connect_signal("unfocus", function(c) c.border_color = beautiful.border_normal end)$/;"	f
client.connect_signal("unfocus", function(c) c.border_color 	.config/awesome/rc.lua	/^client.connect_signal("unfocus", function(c) c.border_color = beautiful.border_normal end)$/;"	f
col_conv	bin/conky3/ani.lua	/^function col_conv(colour,alpha)$/;"	f
col_conv	bin/conky3/ani.str.lua	/^function col_conv(colour,alpha)$/;"	f
colour_array	gtypist.c	/^static short	colour_array[] = {$/;"	v	file:
compare	gtypist.c	/^int compare(const void *s1, const void *s2)$/;"	f
compare_git_uri	.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
conky_clock_rings	bin/conky/clock_rings.lua	/^function conky_clock_rings()$/;"	f
conky_clock_rings	bin/conky3/clock_rings.str.lua	/^function conky_clock_rings()$/;"	f
conky_end	bin/conky3/ani.lua	/^function conky_end()$/;"	f
conky_end	bin/conky3/ani.str.lua	/^function conky_end()$/;"	f
conky_init	bin/conky3/ani.lua	/^function conky_init()$/;"	f
conky_init	bin/conky3/ani.str.lua	/^function conky_init()$/;"	f
conky_main	bin/conky3/ani.lua	/^function conky_main()$/;"	f
conky_main	bin/conky3/ani.str.lua	/^function conky_main()$/;"	f
conky_ring_stats	bin/conky2/lua.lua	/^ function conky_ring_stats()$/;"	f
count	gtypist.c	/^	int count;$/;"	m	struct:__anon1	file:
cpu.update	.config/awesome-simpler/lain/widget/cpu.lua	/^    function cpu.update()$/;"	f
cpu.update	.config/awesome/awesome/lain/widget/cpu.lua	/^    function cpu.update()$/;"	f
cpu.update	.config/awesome/lain/widget/cpu.lua	/^    function cpu.update()$/;"	f
create_button_row	.config/awesome-simpler/osk.lua	/^local function create_button_row(...)$/;"	f
datasplit	.config/awesome-simpler/vicious/contrib/sensors_linux.lua	/^local function datasplit(str)$/;"	f
define_commands	.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
delete	.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
delete_op	.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
desktop.add_base_icons	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.add_base_icons(args)$/;"	f
desktop.add_base_icons	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.add_base_icons(args)$/;"	f
desktop.add_base_icons	.config/awesome/freedesktop/desktop.lua	/^function desktop.add_base_icons(args)$/;"	f
desktop.add_dirs_and_files_icons	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.add_dirs_and_files_icons(args)$/;"	f
desktop.add_dirs_and_files_icons	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.add_dirs_and_files_icons(args)$/;"	f
desktop.add_dirs_and_files_icons	.config/awesome/freedesktop/desktop.lua	/^function desktop.add_dirs_and_files_icons(args)$/;"	f
desktop.add_icons	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.add_icons(args)$/;"	f
desktop.add_icons	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.add_icons(args)$/;"	f
desktop.add_icons	.config/awesome/freedesktop/desktop.lua	/^function desktop.add_icons(args)$/;"	f
desktop.add_single_icon	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.add_single_icon(args, label, icon, onclick)$/;"	f
desktop.add_single_icon	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.add_single_icon(args, label, icon, onclick)$/;"	f
desktop.add_single_icon	.config/awesome/freedesktop/desktop.lua	/^function desktop.add_single_icon(args, label, icon, onclick)$/;"	f
desktop.lookup_file_icon	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.lookup_file_icon(filename)$/;"	f
desktop.lookup_file_icon	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.lookup_file_icon(filename)$/;"	f
desktop.lookup_file_icon	.config/awesome/freedesktop/desktop.lua	/^function desktop.lookup_file_icon(filename)$/;"	f
desktop.parse_dirs_and_files	.config/awesome-simpler/freedesktop/desktop.lua	/^function desktop.parse_dirs_and_files(dir)$/;"	f
desktop.parse_dirs_and_files	.config/awesome/awesome/freedesktop/desktop.lua	/^function desktop.parse_dirs_and_files(dir)$/;"	f
desktop.parse_dirs_and_files	.config/awesome/freedesktop/desktop.lua	/^function desktop.parse_dirs_and_files(dir)$/;"	f
destroy 	.config/awesome-simpler/lain/widget/alsabar.lua	/^                    destroy = function() alsabar.notification = nil end$/;"	f
destroy 	.config/awesome-simpler/lain/widget/pulsebar.lua	/^                    destroy = function() pulsebar.notification = nil end$/;"	f
destroy 	.config/awesome/awesome/lain/widget/alsabar.lua	/^                    destroy = function() alsabar.notification = nil end$/;"	f
destroy 	.config/awesome/awesome/lain/widget/pulsebar.lua	/^                    destroy = function() pulsebar.notification = nil end$/;"	f
destroy 	.config/awesome/lain/widget/alsabar.lua	/^                    destroy = function() alsabar.notification = nil end$/;"	f
destroy 	.config/awesome/lain/widget/pulsebar.lua	/^                    destroy = function() pulsebar.notification = nil end$/;"	f
diff	.vim/autoload/plug.vim	/^function! s:diff()$/;"	f
dirpath	.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
display_speed	gtypist.c	/^static void display_speed( int total_chars, double elapsed_time, int errcount ) {$/;"	f	file:
do	.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
do_bell	gtypist.c	/^void do_bell() {$/;"	f
do_cascade	.config/awesome-simpler/lain/layout/cascade.lua	/^local function do_cascade(p, tiling)$/;"	f
do_cascade	.config/awesome/awesome/lain/layout/cascade.lua	/^local function do_cascade(p, tiling)$/;"	f
do_cascade	.config/awesome/lain/layout/cascade.lua	/^local function do_cascade(p, tiling)$/;"	f
do_centerwork	.config/awesome-simpler/lain/layout/centerwork.lua	/^local function do_centerwork(p, orientation)$/;"	f
do_clear	gtypist.c	/^static void do_clear (FILE *script, char *line)$/;"	f	file:
do_drill	gtypist.c	/^do_drill( FILE *script, char *line ) {$/;"	f	file:
do_error_max_set	gtypist.c	/^do_error_max_set( FILE *script, char *line )$/;"	f	file:
do_fair	.config/awesome-simpler/lain/layout/termfair.lua	/^local function do_fair(p, orientation)$/;"	f
do_fair	.config/awesome/awesome/lain/layout/termfair.lua	/^local function do_fair(p, orientation)$/;"	f
do_fair	.config/awesome/lain/layout/termfair.lua	/^local function do_fair(p, orientation)$/;"	f
do_goto	gtypist.c	/^do_goto( FILE *script, char *line, bool flag )$/;"	f	file:
do_instruction	gtypist.c	/^do_instruction( FILE *script, char *line ) {$/;"	f	file:
do_keybind	gtypist.c	/^do_keybind( FILE *script, char *line ) {$/;"	f	file:
do_on_failure_label_set	gtypist.c	/^do_on_failure_label_set( FILE *script, char *line )$/;"	f	file:
do_query	gtypist.c	/^do_query( FILE *script, char *line )$/;"	f	file:
do_query_repeat	gtypist.c	/^do_query_repeat ( FILE *script, bool allow_next )$/;"	f	file:
do_query_simple	gtypist.c	/^do_query_simple ( char *text )$/;"	f	file:
do_speedtest	gtypist.c	/^do_speedtest( FILE *script, char *line ) {$/;"	f	file:
do_tutorial	gtypist.c	/^do_tutorial( FILE *script, char *line ) {$/;"	f	file:
doautocmd	.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
dobufread	.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
draw 	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^        draw = function(self, context, cr, width, height)$/;"	f
draw 	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^        draw = function(self, context, cr, width, height)$/;"	f
draw 	.config/awesome/themes/powerarrow/binclock.lua	/^        draw = function(self, context, cr, width, height)$/;"	f
draw_clock_hands	bin/conky/clock_rings.lua	/^function draw_clock_hands(cr,xc,yc)$/;"	f
draw_clock_hands	bin/conky3/clock_rings.str.lua	/^function draw_clock_hands(cr,xc,yc)$/;"	f
draw_cpu_avg_ring	bin/conky3/ani.lua	/^function draw_cpu_avg_ring(x,y,r,tilted_angle,angular_width)$/;"	f
draw_cpuring	bin/conky3/ani.lua	/^function draw_cpuring(x,y,r,tilted_angle,angular_width)$/;"	f
draw_memring	bin/conky3/ani.lua	/^function draw_memring(x,y,r,tilted_angle,angular_width)$/;"	f
draw_ring	bin/conky/clock_rings.lua	/^function draw_ring(cr,t,pt)$/;"	f
draw_ring	bin/conky2/lua.lua	/^ function draw_ring(cr,t,pt)$/;"	f
draw_ring	bin/conky3/clock_rings.str.lua	/^function draw_ring(cr,t,pt)$/;"	f
draw_rotating_4_cpu_block	bin/conky3/ani.str.lua	/^function draw_rotating_4_cpu_block(v,x,y,r,tilted_angle,val0,val1,val2,val3)$/;"	f
draw_sring	bin/conky3/ani.str.lua	/^function draw_sring(v,x,y,r,tilted_angle,angular_width)$/;"	f
dump	.config/ranger/scope.sh	/^dump() { \/bin\/echo "$output"; }$/;"	f
elseif type(format) 	.config/awesome-simpler/vicious/init.lua	/^    elseif type(format) == "function" then$/;"	f
elseif type(password) 	.config/awesome-simpler/lain/widget/imap.lua	/^        elseif type(password) == "function" then$/;"	f
elseif type(password) 	.config/awesome/awesome/lain/widget/imap.lua	/^        elseif type(password) == "function" then$/;"	f
elseif type(password) 	.config/awesome/lain/widget/imap.lua	/^        elseif type(password) == "function" then$/;"	f
elseif type(reg.format) 	.config/awesome-simpler/vicious/init.lua	/^            elseif type(reg.format) == "function" then$/;"	f
encode2 	.config/awesome-simpler/lain/util/dkjson.lua	/^encode2 = function (value, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
encode2 	.config/awesome/awesome/lain/util/dkjson.lua	/^encode2 = function (value, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
encode2 	.config/awesome/lain/util/dkjson.lua	/^encode2 = function (value, indent, level, buffer, buflen, tables, globalorder, state)$/;"	f
err	.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
esc	.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
escape	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^local function escape(text)$/;"	f
escapeutf8 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function escapeutf8 (uchar)$/;"	f
escapeutf8 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function escapeutf8 (uchar)$/;"	f
escapeutf8 	.config/awesome/lain/util/dkjson.lua	/^local function escapeutf8 (uchar)$/;"	f
escrtp	.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
exception	.config/awesome-simpler/lain/util/dkjson.lua	/^local function exception(reason, value, state, buffer, buflen, defaultmessage)$/;"	f
exception	.config/awesome/awesome/lain/util/dkjson.lua	/^local function exception(reason, value, state, buffer, buflen, defaultmessage)$/;"	f
exception	.config/awesome/lain/util/dkjson.lua	/^local function exception(reason, value, state, buffer, buflen, defaultmessage)$/;"	f
exe_callback 	.config/awesome-simpler/lain/util/init.lua	/^        exe_callback = function(name)$/;"	f
exe_callback 	.config/awesome-simpler/lain/util/init.lua	/^        exe_callback = function(new_name)$/;"	f
exe_callback 	.config/awesome-simpler/lain/widget/contrib/task.lua	/^        exe_callback = function(t)$/;"	f
exe_callback 	.config/awesome/awesome/lain/util/init.lua	/^        exe_callback = function(name)$/;"	f
exe_callback 	.config/awesome/awesome/lain/util/init.lua	/^        exe_callback = function(new_name)$/;"	f
exe_callback 	.config/awesome/awesome/lain/widget/contrib/task.lua	/^        exe_callback = function(t)$/;"	f
exe_callback 	.config/awesome/lain/util/init.lua	/^        exe_callback = function(name)$/;"	f
exe_callback 	.config/awesome/lain/util/init.lua	/^        exe_callback = function(new_name)$/;"	f
exe_callback 	.config/awesome/lain/widget/contrib/task.lua	/^        exe_callback = function(t)$/;"	f
extract_name	.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
factory	.config/awesome-simpler/lain/widget/alsa.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/alsabar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/bat.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/calendar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/contrib/gpmdp.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/contrib/moc.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/cpu.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/fs.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/imap.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/mem.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/mpd.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/net.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/pulseaudio.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/pulsebar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/sysload.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/temp.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/lain/widget/weather.lua	/^local function factory(args)$/;"	f
factory	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/alsa.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/alsabar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/bat.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/cal.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/contrib/moc.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^local function factory(apipath)$/;"	f
factory	.config/awesome/awesome/lain/widget/cpu.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/fs.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/imap.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/mem.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/mpd.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/net.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/pulse.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/pulsebar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/sysload.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/temp.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/lain/widget/weather.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/alsa.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/alsabar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/bat.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/cal.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/contrib/moc.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^local function factory(apipath)$/;"	f
factory	.config/awesome/lain/widget/cpu.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/fs.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/imap.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/mem.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/mpd.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/net.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/pulse.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/pulsebar.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/sysload.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/temp.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/lain/widget/weather.lua	/^local function factory(args)$/;"	f
factory	.config/awesome/themes/powerarrow/binclock.lua	/^local function factory(args)$/;"	f
fg_col	bin/conky3/ani.str.lua	/^fg_col=sol_green,bg_col=sol_base01, -- This color is not used in the main function for this element$/;"	f
find	.vim/autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd)$/;"	f
find_name	.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
finish	.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish_bindings	.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
fit 	.config/awesome-simpler/themes/powerarrow/binclock.lua	/^        fit = function(self, context, width, height)$/;"	f
fit 	.config/awesome/awesome/themes/powerarrow/binclock.lua	/^        fit = function(self, context, width, height)$/;"	f
fit 	.config/awesome/themes/powerarrow/binclock.lua	/^        fit = function(self, context, width, height)$/;"	f
fkey_bindings	gtypist.c	/^static char	*fkey_bindings[ NFKEYS ] =$/;"	v	file:
format_data	.config/awesome-simpler/vicious/init.lua	/^    local function format_data(data)$/;"	f
format_git_log	.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_message	.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
fs.hide	.config/awesome-simpler/lain/widget/fs.lua	/^    function fs.hide()$/;"	f
fs.hide	.config/awesome/awesome/lain/widget/fs.lua	/^    function fs.hide()$/;"	f
fs.hide	.config/awesome/lain/widget/fs.lua	/^    function fs.hide()$/;"	f
fs.show	.config/awesome-simpler/lain/widget/fs.lua	/^    function fs.show(seconds, scr)$/;"	f
fs.show	.config/awesome/awesome/lain/widget/fs.lua	/^    function fs.show(seconds, scr)$/;"	f
fs.show	.config/awesome/lain/widget/fs.lua	/^    function fs.show(seconds, scr)$/;"	f
fs.update	.config/awesome-simpler/lain/widget/fs.lua	/^    function fs.update()$/;"	f
fs.update	.config/awesome/awesome/lain/widget/fs.lua	/^    function fs.update()$/;"	f
fs.update	.config/awesome/lain/widget/fs.lua	/^    function fs.update()$/;"	f
fsub 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function fsub (str, pattern, repl)$/;"	f
fsub 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function fsub (str, pattern, repl)$/;"	f
fsub 	.config/awesome/lain/util/dkjson.lua	/^local function fsub (str, pattern, repl)$/;"	f
g:loaded_pathogen	.vim/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_plug	.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:plugs_order	.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
getBuilderStatus	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^local function getBuilderStatus(b)$/;"	f
get_best_speed	gtypist.c	/^bool get_best_speed( const char *script_filename,$/;"	f
get_sink_name	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^local function get_sink_name(sink)$/;"	f
getch_fl	gtypist.c	/^getch_fl( int cursor_char )$/;"	f	file:
gettags	.config/awesome-simpler/eminent/init.lua	/^function gettags(screen)$/;"	f
getwindow	.config/i3/i3/my_scr/i3get	/^getwindow(){$/;"	f
getwindow	.config/i3/my_scr/i3get	/^getwindow(){$/;"	f
git_dir	.vim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
git_local_branch	.vim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
git_origin_branch	.vim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
git_origin_url	.vim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
git_revision	.vim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
git_validate	.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version_requirement	.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
glob	.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob_dir	.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
global_error_max	gtypist.c	/^static float	global_error_max = -1.0;$/;"	v	file:
global_error_max_persistent	gtypist.c	/^static bool	global_error_max_persistent = FALSE;$/;"	v	file:
global_home_env	gtypist.c	/^static char	*global_home_env = NULL;$/;"	v	file:
global_on_failure_label	gtypist.c	/^static struct	label_entry *global_on_failure_label = NULL;$/;"	v	typeref:struct:label_entry	file:
global_on_failure_label_persistent	gtypist.c	/^static bool	global_on_failure_label_persistent = FALSE;$/;"	v	file:
global_prior_command	gtypist.c	/^static char	global_prior_command = C_CONT;$/;"	v	file:
global_resp_flag	gtypist.c	/^static bool	global_resp_flag = TRUE;$/;"	v	file:
global_script_filename	gtypist.c	/^static char 	*global_script_filename = NULL;$/;"	v	file:
gpmdp.update	.config/awesome-simpler/lain/widget/contrib/gpmdp.lua	/^    function gpmdp.update()$/;"	f
has_value 	.config/awesome-simpler/freedesktop/menu.lua	/^local function has_value (tab, val)$/;"	f
hash_match	.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
helpers.async	.config/awesome-simpler/lain/helpers.lua	/^function helpers.async(cmd, callback)$/;"	f
helpers.async	.config/awesome/awesome/lain/helpers.lua	/^function helpers.async(cmd, callback)$/;"	f
helpers.async	.config/awesome/lain/helpers.lua	/^function helpers.async(cmd, callback)$/;"	f
helpers.async(password, function(f) password 	.config/awesome-simpler/lain/widget/imap.lua	/^            helpers.async(password, function(f) password = f:gsub("\\n", "") end)$/;"	f
helpers.async(password, function(f) password 	.config/awesome/awesome/lain/widget/imap.lua	/^            helpers.async(password, function(f) password = f:gsub("\\n", "") end)$/;"	f
helpers.async(password, function(f) password 	.config/awesome/lain/widget/imap.lua	/^            helpers.async(password, function(f) password = f:gsub("\\n", "") end)$/;"	f
helpers.async({ shell, "-c", "/usr/bin/env LC_ALL	.config/awesome-simpler/lain/widget/fs.lua	/^        helpers.async({ shell, "-c", "\/usr\/bin\/env LC_ALL=C df -k --output=target,size,used,avail,pcent" }, function(f)$/;"	f
helpers.async_with_shell	.config/awesome/awesome/lain/helpers.lua	/^function helpers.async_with_shell(cmd, callback)$/;"	f
helpers.async_with_shell	.config/awesome/lain/helpers.lua	/^function helpers.async_with_shell(cmd, callback)$/;"	f
helpers.capitalize	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.capitalize(text)$/;"	f
helpers.element_in_table	.config/awesome-simpler/lain/helpers.lua	/^function helpers.element_in_table(element, tbl)$/;"	f
helpers.element_in_table	.config/awesome/awesome/lain/helpers.lua	/^function helpers.element_in_table(element, tbl)$/;"	f
helpers.element_in_table	.config/awesome/lain/helpers.lua	/^function helpers.element_in_table(element, tbl)$/;"	f
helpers.escape	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.escape(text)$/;"	f
helpers.file_exists	.config/awesome-simpler/lain/helpers.lua	/^function helpers.file_exists(file)$/;"	f
helpers.file_exists	.config/awesome/awesome/lain/helpers.lua	/^function helpers.file_exists(path)$/;"	f
helpers.file_exists	.config/awesome/lain/helpers.lua	/^function helpers.file_exists(path)$/;"	f
helpers.first_line	.config/awesome-simpler/lain/helpers.lua	/^function helpers.first_line(file)$/;"	f
helpers.first_line	.config/awesome/awesome/lain/helpers.lua	/^function helpers.first_line(path)$/;"	f
helpers.first_line	.config/awesome/lain/helpers.lua	/^function helpers.first_line(path)$/;"	f
helpers.first_nonempty_line	.config/awesome-simpler/lain/helpers.lua	/^function helpers.first_nonempty_line(file)$/;"	f
helpers.first_nonempty_line	.config/awesome/awesome/lain/helpers.lua	/^function helpers.first_nonempty_line(path)$/;"	f
helpers.first_nonempty_line	.config/awesome/lain/helpers.lua	/^function helpers.first_nonempty_line(path)$/;"	f
helpers.format	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.format(format, args)$/;"	f
helpers.get_map	.config/awesome-simpler/lain/helpers.lua	/^function helpers.get_map(element)$/;"	f
helpers.get_map	.config/awesome/awesome/lain/helpers.lua	/^function helpers.get_map(element)$/;"	f
helpers.get_map	.config/awesome/lain/helpers.lua	/^function helpers.get_map(element)$/;"	f
helpers.getos	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.getos()$/;"	f
helpers.line_callback	.config/awesome/awesome/lain/helpers.lua	/^function helpers.line_callback(cmd, callback)$/;"	f
helpers.line_callback	.config/awesome/lain/helpers.lua	/^function helpers.line_callback(cmd, callback)$/;"	f
helpers.lines_from	.config/awesome-simpler/lain/helpers.lua	/^function helpers.lines_from(file)$/;"	f
helpers.lines_from	.config/awesome/awesome/lain/helpers.lua	/^function helpers.lines_from(path)$/;"	f
helpers.lines_from	.config/awesome/lain/helpers.lua	/^function helpers.lines_from(path)$/;"	f
helpers.lines_match	.config/awesome-simpler/lain/helpers.lua	/^function helpers.lines_match(regexp, file)$/;"	f
helpers.lines_match	.config/awesome/awesome/lain/helpers.lua	/^function helpers.lines_match(regexp, path)$/;"	f
helpers.lines_match	.config/awesome/lain/helpers.lua	/^function helpers.lines_match(regexp, path)$/;"	f
helpers.newtimer	.config/awesome-simpler/lain/helpers.lua	/^function helpers.newtimer(name, timeout, fun, nostart, stoppable)$/;"	f
helpers.newtimer	.config/awesome/awesome/lain/helpers.lua	/^function helpers.newtimer(name, timeout, fun, nostart, stoppable)$/;"	f
helpers.newtimer	.config/awesome/lain/helpers.lua	/^function helpers.newtimer(name, timeout, fun, nostart, stoppable)$/;"	f
helpers.pathtotable	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.pathtotable(dir)$/;"	f
helpers.powerset	.config/awesome/awesome/lain/helpers.lua	/^function helpers.powerset(s)$/;"	f
helpers.powerset	.config/awesome/lain/helpers.lua	/^function helpers.powerset(s)$/;"	f
helpers.scroll	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.scroll(text, maxlen, widget)$/;"	f
helpers.set_map	.config/awesome-simpler/lain/helpers.lua	/^function helpers.set_map(element, value)$/;"	f
helpers.set_map	.config/awesome/awesome/lain/helpers.lua	/^function helpers.set_map(element, value)$/;"	f
helpers.set_map	.config/awesome/lain/helpers.lua	/^function helpers.set_map(element, value)$/;"	f
helpers.shellquote	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.shellquote(arg)$/;"	f
helpers.spairs	.config/awesome-simpler/lain/helpers.lua	/^function helpers.spairs(t)$/;"	f
helpers.spairs	.config/awesome/awesome/lain/helpers.lua	/^function helpers.spairs(t)$/;"	f
helpers.spairs	.config/awesome/lain/helpers.lua	/^function helpers.spairs(t)$/;"	f
helpers.sysctl	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.sysctl(path)$/;"	f
helpers.sysctl_table	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.sysctl_table(syspath)$/;"	f
helpers.trivial_partition_set	.config/awesome/awesome/lain/helpers.lua	/^function helpers.trivial_partition_set(set)$/;"	f
helpers.trivial_partition_set	.config/awesome/lain/helpers.lua	/^function helpers.trivial_partition_set(set)$/;"	f
helpers.truncate	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.truncate(text, maxlen)$/;"	f
helpers.uformat	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.uformat(array, key, value, unit)$/;"	f
helpers.wrequire	.config/awesome-simpler/lain/helpers.lua	/^function helpers.wrequire(table, key)$/;"	f
helpers.wrequire	.config/awesome-simpler/vicious/helpers.lua	/^function helpers.wrequire(table, key)$/;"	f
helpers.wrequire	.config/awesome/awesome/lain/helpers.lua	/^function helpers.wrequire(table, key)$/;"	f
helpers.wrequire	.config/awesome/lain/helpers.lua	/^function helpers.wrequire(table, key)$/;"	f
if #bb 	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^    if #bb == 0 then    --fill up bb with builders when worker function is run for the first time$/;"	f
if type(callback) 	.config/awesome-simpler/lain/widget/alsabar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(callback) 	.config/awesome-simpler/lain/widget/pulsebar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(callback) 	.config/awesome/awesome/lain/widget/alsabar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(callback) 	.config/awesome/awesome/lain/widget/pulsebar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(callback) 	.config/awesome/lain/widget/alsabar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(callback) 	.config/awesome/lain/widget/pulsebar.lua	/^                if type(callback) == "function" then callback() end$/;"	f
if type(redshift.update_fun) 	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^    if type(redshift.update_fun) == "function" then$/;"	f
if type(redshift.update_fun) 	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^    if type(redshift.update_fun) == "function" then$/;"	f
if type(redshift.update_fun) 	.config/awesome/lain/widget/contrib/redshift.lua	/^    if type(redshift.update_fun) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/blackburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/copland/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/dep/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/depvicious/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/dremora/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/holo/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/multicolor/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/powerarrow-dark/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/powerarrow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/rainbow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/steamburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/vertex/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/yoga/dep/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome-simpler/themes/yoga/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/rc.lua	/^        if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/blackburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/copland/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/dremora/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/holo/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/multicolor/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/powerarrow-dark/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/powerarrow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/rainbow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/steamburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/awesome/themes/vertex/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/rc.lua	/^        if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/blackburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/copland/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/dremora/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/holo/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/multicolor/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/powerarrow-dark/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^   if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/powerarrow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/rainbow/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/steamburn/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
if type(wallpaper) 	.config/awesome/themes/vertex/theme.lua	/^    if type(wallpaper) == "function" then$/;"	f
imap.pwdtimer 	.config/awesome/awesome/lain/widget/imap.lua	/^            imap.pwdtimer = helpers.newtimer(mail .. "-password", pwdtimeout, function()$/;"	f
imap.pwdtimer 	.config/awesome/lain/widget/imap.lua	/^            imap.pwdtimer = helpers.newtimer(mail .. "-password", pwdtimeout, function()$/;"	f
imap.update	.config/awesome/awesome/lain/widget/imap.lua	/^    function imap.update()$/;"	f
imap.update	.config/awesome/lain/widget/imap.lua	/^    function imap.update()$/;"	f
indent_to	gtypist.c	/^indent_to( int n )$/;"	f	file:
infer_properties	.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
install	.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
isUTF8Locale	gtypist.c	/^int isUTF8Locale; \/* does the current locale have a UTF-8 encoding? *\/$/;"	v
is_error_too_high	gtypist.c	/^is_error_too_high( int chars_typed, int errors ) {$/;"	f	file:
is_local_plug	.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_managed	.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_preview_window_open	.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_updated	.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
isabsolute	.vim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
isarray 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function isarray (tbl)$/;"	f
isarray 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function isarray (tbl)$/;"	f
isarray 	.config/awesome/lain/util/dkjson.lua	/^local function isarray (tbl)$/;"	f
it will cause a segmentation fault if it tries to draw a ring straight away. The if statement near the end of the script uses a delay to make sure that this doesn't happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement 	bin/conky/clock_rings.lua	/^IMPORTANT: if you are using the 'cpu' function, it will cause a segmentation fault if it tries to draw a ring straight away. The if statement near the end of the script uses a delay to make sure that this doesn't happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement (the default). If you only update Conky every 2s, you should change it to update_num > 3; conversely if you update Conky every 0.5s, you should use update_num > 10. ALSO, if you change your Conky, is it best to use "killall conky; conky" to update it, otherwise the update_num will not be reset and you will get an error.$/;"	f
it will cause a segmentation fault if it tries to draw a ring straight away. The if statement near the end of the script uses a delay to make sure that this doesn't happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement 	bin/conky3/clock_rings.str.lua	/^IMPORTANT: if you are using the 'cpu' function, it will cause a segmentation fault if it tries to draw a ring straight away. The if statement near the end of the script uses a delay to make sure that this doesn't happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement (the default). If you only update Conky every 2s, you should change it to update_num > 3; conversely if you update Conky every 0.5s, you should use update_num > 10. ALSO, if you change your Conky, is it best to use "killall conky; conky" to update it, otherwise the update_num will not be reset and you will get an error.$/;"	f
it will cause a segmentation fault if it tries to draw a ring straight away. The if statement on line 145 uses a delay to make sure that this does not happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement 	bin/conky2/lua.lua	/^ IMPORTANT: if you are using the 'cpu' function, it will cause a segmentation fault if it tries to draw a ring straight away. The if statement on line 145 uses a delay to make sure that this does not happen. It calculates the length of the delay by the number of updates since Conky started. Generally, a value of 5s is long enough, so if you update Conky every 1s, use update_num > 5 in that if statement (the default). If you only update Conky every 2s, you should change it to update_num > 3; conversely if you update Conky every 0.5s, you should use update_num > 10. ALSO, if you change your Conky, is it best to use "killall conky; conky" to update it, otherwise the update_num will not be reset and you will get an error.$/;"	f
iterate	.config/awesome/awesome/lain/util/menu_iterator.lua	/^local function iterate(menu, timeout, icon)$/;"	f
iterate	.config/awesome/lain/util/menu_iterator.lua	/^local function iterate(menu, timeout, icon)$/;"	f
job_abort	.vim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_cb	.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_out_cb	.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
json.addnewline 	.config/awesome-simpler/lain/util/dkjson.lua	/^function json.addnewline (state)$/;"	f
json.addnewline 	.config/awesome/awesome/lain/util/dkjson.lua	/^function json.addnewline (state)$/;"	f
json.addnewline 	.config/awesome/lain/util/dkjson.lua	/^function json.addnewline (state)$/;"	f
json.decode 	.config/awesome-simpler/lain/util/dkjson.lua	/^  function json.decode (str, pos, nullval, ...)$/;"	f
json.decode 	.config/awesome-simpler/lain/util/dkjson.lua	/^function json.decode (str, pos, nullval, ...)$/;"	f
json.decode 	.config/awesome/awesome/lain/util/dkjson.lua	/^  function json.decode (str, pos, nullval, ...)$/;"	f
json.decode 	.config/awesome/awesome/lain/util/dkjson.lua	/^function json.decode (str, pos, nullval, ...)$/;"	f
json.decode 	.config/awesome/lain/util/dkjson.lua	/^  function json.decode (str, pos, nullval, ...)$/;"	f
json.decode 	.config/awesome/lain/util/dkjson.lua	/^function json.decode (str, pos, nullval, ...)$/;"	f
json.encode 	.config/awesome-simpler/lain/util/dkjson.lua	/^function json.encode (value, state)$/;"	f
json.encode 	.config/awesome/awesome/lain/util/dkjson.lua	/^function json.encode (value, state)$/;"	f
json.encode 	.config/awesome/lain/util/dkjson.lua	/^function json.encode (value, state)$/;"	f
json.encodeexception	.config/awesome-simpler/lain/util/dkjson.lua	/^function json.encodeexception(reason, value, state, defaultmessage)$/;"	f
json.encodeexception	.config/awesome/awesome/lain/util/dkjson.lua	/^function json.encodeexception(reason, value, state, defaultmessage)$/;"	f
json.encodeexception	.config/awesome/lain/util/dkjson.lua	/^function json.encodeexception(reason, value, state, defaultmessage)$/;"	f
json.use_lpeg 	.config/awesome-simpler/lain/util/dkjson.lua	/^  json.use_lpeg = function () return json end$/;"	f
json.use_lpeg 	.config/awesome-simpler/lain/util/dkjson.lua	/^function json.use_lpeg ()$/;"	f
json.use_lpeg 	.config/awesome/awesome/lain/util/dkjson.lua	/^  json.use_lpeg = function () return json end$/;"	f
json.use_lpeg 	.config/awesome/awesome/lain/util/dkjson.lua	/^function json.use_lpeg ()$/;"	f
json.use_lpeg 	.config/awesome/lain/util/dkjson.lua	/^  json.use_lpeg = function () return json end$/;"	f
json.use_lpeg 	.config/awesome/lain/util/dkjson.lua	/^function json.use_lpeg ()$/;"	f
kbd_run_settings	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^    local function kbd_run_settings(layout, variant)$/;"	f
kbdlayout.next	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^   function kbdlayout.next() kbdlayout.set(idx + 1) end$/;"	f
kbdlayout.prev	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^   function kbdlayout.prev() kbdlayout.set(idx - 1) end$/;"	f
kbdlayout.set	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^    function kbdlayout.set(i)$/;"	f
kbdlayout.update	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^    function kbdlayout.update()$/;"	f
last_non_empty_line	.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
lastline	.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
lazy	.vim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
letter	gtypist.c	/^	char letter;$/;"	m	struct:__anon1	file:
lines	.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
load_plugin	.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
loaded_names	.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loadtheme	.config/awesome/rc.lua	/^function loadtheme()$/;"	f
loc 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function loc (str, where)$/;"	f
loc 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function loc (str, where)$/;"	f
loc 	.config/awesome/lain/util/dkjson.lua	/^local function loc (str, where)$/;"	f
local dockshape 	.config/awesome-simpler/themes/vertex/theme.lua	/^local dockshape = function(cr, width, height)$/;"	f
local dockshape 	.config/awesome/awesome/themes/vertex/theme.lua	/^local dockshape = function(cr, width, height)$/;"	f
local dockshape 	.config/awesome/themes/vertex/theme.lua	/^local dockshape = function(cr, width, height)$/;"	f
local onclick 	.config/awesome-simpler/freedesktop/desktop.lua	/^            local onclick = function () awful.spawn(string.format("%s '%s'", args.open_with, file.path)) end$/;"	f
local onclick 	.config/awesome/awesome/freedesktop/desktop.lua	/^            local onclick = function () awful.spawn(string.format("%s '%s'", args.open_with, file.path)) end$/;"	f
local onclick 	.config/awesome/freedesktop/desktop.lua	/^            local onclick = function () awful.spawn(string.format("%s '%s'", args.open_with, file.path)) end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/alsa.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/cpu.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/mem.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/net.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/sysload.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome-simpler/lain/widget/temp.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/alsa.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/cpu.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/mem.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/pulse.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/sysload.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/awesome/lain/widget/temp.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/alsa.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/cpu.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/mem.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/pulse.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/sysload.lua	/^    local settings = args.settings or function() end$/;"	f
local settings 	.config/awesome/lain/widget/temp.lua	/^    local settings = args.settings or function() end$/;"	f
local settings  	.config/awesome-simpler/lain/widget/bat.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome-simpler/lain/widget/imap.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/awesome/lain/widget/bat.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^        local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/awesome/lain/widget/fs.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/lain/widget/bat.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^        local settings  = args.settings or function() end$/;"	f
local settings  	.config/awesome/lain/widget/fs.lua	/^    local settings  = args.settings or function() end$/;"	f
local settings   	.config/awesome-simpler/lain/widget/alsabar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome-simpler/lain/widget/pulsebar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/awesome/lain/widget/alsabar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/awesome/lain/widget/imap.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/awesome/lain/widget/net.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/awesome/lain/widget/pulsebar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/lain/widget/alsabar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/lain/widget/imap.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/lain/widget/net.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings   	.config/awesome/lain/widget/pulsebar.lua	/^    local settings   = args.settings or function() end$/;"	f
local settings    	.config/awesome-simpler/lain/widget/pulseaudio.lua	/^    local settings    = args.settings or function() end$/;"	f
local settings      	.config/awesome-simpler/lain/widget/contrib/gpmdp.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome-simpler/lain/widget/contrib/moc.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome-simpler/lain/widget/mpd.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome/awesome/lain/widget/contrib/moc.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome/awesome/lain/widget/mpd.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome/lain/widget/contrib/moc.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings      	.config/awesome/lain/widget/mpd.lua	/^    local settings      = args.settings or function() end$/;"	f
local settings         	.config/awesome-simpler/lain/widget/contrib/kbdlayout.lua	/^    local settings         = args.settings or function () end$/;"	f
local settings         	.config/awesome-simpler/lain/widget/fs.lua	/^    local settings         = args.settings or function() end$/;"	f
local settings              	.config/awesome-simpler/lain/widget/weather.lua	/^    local settings              = args.settings or function() end$/;"	f
local settings              	.config/awesome/awesome/lain/widget/weather.lua	/^    local settings              = args.settings or function() end$/;"	f
local settings              	.config/awesome/lain/widget/weather.lua	/^    local settings              = args.settings or function() end$/;"	f
local sock_avail, socket 	.config/awesome-simpler/vicious/contrib/pop_all.lua	/^local sock_avail, socket = pcall(function()$/;"	f
local status, data 	.config/awesome-simpler/vicious/contrib/btc_all.lua	/^        local status, data = pcall(function() return json.decode(response) end)$/;"	f
locale_encoding	gtypist.c	/^char* locale_encoding; \/* current locale's encoding *\/$/;"	v
lod	.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	.vim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
log	.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log4	.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
logpos	.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
lpad	.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
main	gtypist.c	/^int main( int argc, char **argv )$/;"	f
markup.bg.color	.config/awesome-simpler/lain/util/markup.lua	/^function markup.bg.color(color, text)$/;"	f
markup.bg.color	.config/awesome/awesome/lain/util/markup.lua	/^function markup.bg.color(color, text)$/;"	f
markup.bg.color	.config/awesome/lain/util/markup.lua	/^function markup.bg.color(color, text)$/;"	f
markup.big	.config/awesome-simpler/lain/util/markup.lua	/^function markup.big(text)       return '<big>'   .. text .. '<\/big>'   end$/;"	f
markup.big	.config/awesome/awesome/lain/util/markup.lua	/^function markup.big(text)       return format("<big>%s<\/big>",     text) end$/;"	f
markup.big	.config/awesome/lain/util/markup.lua	/^function markup.big(text)       return format("<big>%s<\/big>",     text) end$/;"	f
markup.bold	.config/awesome-simpler/lain/util/markup.lua	/^function markup.bold(text)      return '<b>'     .. text .. '<\/b>'     end$/;"	f
markup.bold	.config/awesome/awesome/lain/util/markup.lua	/^function markup.bold(text)      return format("<b>%s<\/b>",         text) end$/;"	f
markup.bold	.config/awesome/lain/util/markup.lua	/^function markup.bold(text)      return format("<b>%s<\/b>",         text) end$/;"	f
markup.color	.config/awesome-simpler/lain/util/markup.lua	/^function markup.color(fg, bg, text)$/;"	f
markup.color	.config/awesome/awesome/lain/util/markup.lua	/^function markup.color(fg, bg, text)$/;"	f
markup.color	.config/awesome/lain/util/markup.lua	/^function markup.color(fg, bg, text)$/;"	f
markup.fa	.config/awesome-simpler/lain/util/markup.lua	/^function markup.fa(text)$/;"	f
markup.fg.color	.config/awesome-simpler/lain/util/markup.lua	/^function markup.fg.color(color, text)$/;"	f
markup.fg.color	.config/awesome/awesome/lain/util/markup.lua	/^function markup.fg.color(color, text)$/;"	f
markup.fg.color	.config/awesome/lain/util/markup.lua	/^function markup.fg.color(color, text)$/;"	f
markup.font	.config/awesome-simpler/lain/util/markup.lua	/^function markup.font(font, text)$/;"	f
markup.font	.config/awesome/awesome/lain/util/markup.lua	/^function markup.font(font, text)$/;"	f
markup.font	.config/awesome/lain/util/markup.lua	/^function markup.font(font, text)$/;"	f
markup.fontbg	.config/awesome-simpler/lain/util/markup.lua	/^function markup.fontbg(font, bg, text)$/;"	f
markup.fontbg	.config/awesome/awesome/lain/util/markup.lua	/^function markup.fontbg(font, bg, text)$/;"	f
markup.fontbg	.config/awesome/lain/util/markup.lua	/^function markup.fontbg(font, bg, text)$/;"	f
markup.fontcolor	.config/awesome-simpler/lain/util/markup.lua	/^function markup.fontcolor(font, fg, bg, text)$/;"	f
markup.fontcolor	.config/awesome/awesome/lain/util/markup.lua	/^function markup.fontcolor(font, fg, bg, text)$/;"	f
markup.fontcolor	.config/awesome/lain/util/markup.lua	/^function markup.fontcolor(font, fg, bg, text)$/;"	f
markup.fontfg	.config/awesome-simpler/lain/util/markup.lua	/^function markup.fontfg(font, fg, text)$/;"	f
markup.fontfg	.config/awesome/awesome/lain/util/markup.lua	/^function markup.fontfg(font, fg, text)$/;"	f
markup.fontfg	.config/awesome/lain/util/markup.lua	/^function markup.fontfg(font, fg, text)$/;"	f
markup.italic	.config/awesome-simpler/lain/util/markup.lua	/^function markup.italic(text)    return '<i>'     .. text .. '<\/i>'     end$/;"	f
markup.italic	.config/awesome/awesome/lain/util/markup.lua	/^function markup.italic(text)    return format("<i>%s<\/i>",         text) end$/;"	f
markup.italic	.config/awesome/lain/util/markup.lua	/^function markup.italic(text)    return format("<i>%s<\/i>",         text) end$/;"	f
markup.monospace	.config/awesome-simpler/lain/util/markup.lua	/^function markup.monospace(text) return '<tt>'    .. text .. '<\/tt>'    end$/;"	f
markup.monospace	.config/awesome/awesome/lain/util/markup.lua	/^function markup.monospace(text) return format("<tt>%s<\/tt>",       text) end$/;"	f
markup.monospace	.config/awesome/lain/util/markup.lua	/^function markup.monospace(text) return format("<tt>%s<\/tt>",       text) end$/;"	f
markup.small	.config/awesome-simpler/lain/util/markup.lua	/^function markup.small(text)     return '<small>' .. text .. '<\/small>' end$/;"	f
markup.small	.config/awesome/awesome/lain/util/markup.lua	/^function markup.small(text)     return format("<small>%s<\/small>", text) end$/;"	f
markup.small	.config/awesome/lain/util/markup.lua	/^function markup.small(text)     return format("<small>%s<\/small>", text) end$/;"	f
markup.strike	.config/awesome-simpler/lain/util/markup.lua	/^function markup.strike(text)    return '<s>'     .. text .. '<\/s>'     end$/;"	f
markup.strike	.config/awesome/awesome/lain/util/markup.lua	/^function markup.strike(text)    return format("<s>%s<\/s>",         text) end$/;"	f
markup.strike	.config/awesome/lain/util/markup.lua	/^function markup.strike(text)    return format("<s>%s<\/s>",         text) end$/;"	f
markup.underline	.config/awesome-simpler/lain/util/markup.lua	/^function markup.underline(text) return '<u>'     .. text .. '<\/u>'     end$/;"	f
markup.underline	.config/awesome/awesome/lain/util/markup.lua	/^function markup.underline(text) return format("<u>%s<\/u>",         text) end$/;"	f
markup.underline	.config/awesome/lain/util/markup.lua	/^function markup.underline(text) return format("<u>%s<\/u>",         text) end$/;"	f
mem.update	.config/awesome-simpler/lain/widget/mem.lua	/^    function mem.update()$/;"	f
mem.update	.config/awesome/awesome/lain/widget/mem.lua	/^    function mem.update()$/;"	f
mem.update	.config/awesome/lain/widget/mem.lua	/^    function mem.update()$/;"	f
menu	.config/awesome/awesome/lain/util/menu_iterator.lua	/^local function menu(args)$/;"	f
menu	.config/awesome/lain/util/menu_iterator.lua	/^local function menu(args)$/;"	f
menu.build	.config/awesome-simpler/freedesktop/menu.lua	/^function menu.build(args)$/;"	f
menu.build	.config/awesome/awesome/freedesktop/menu.lua	/^function menu.build(args)$/;"	f
menu.build	.config/awesome/freedesktop/menu.lua	/^function menu.build(args)$/;"	f
menu.has_value 	.config/awesome/awesome/freedesktop/menu.lua	/^function menu.has_value (tab, val)$/;"	f
menu.has_value 	.config/awesome/freedesktop/menu.lua	/^function menu.has_value (tab, val)$/;"	f
moc.update	.config/awesome-simpler/lain/widget/contrib/moc.lua	/^    function moc.update()$/;"	f
moc.update	.config/awesome/awesome/lain/widget/contrib/moc.lua	/^    function moc.update()$/;"	f
moc.update	.config/awesome/lain/widget/contrib/moc.lua	/^    function moc.update()$/;"	f
mouse_resize_handler	.config/awesome/awesome/lain/layout/centerwork.lua	/^local function mouse_resize_handler(c, corner, x, y, orientation)$/;"	f
mouse_resize_handler	.config/awesome/lain/layout/centerwork.lua	/^local function mouse_resize_handler(c, corner, x, y, orientation)$/;"	f
mpd.update	.config/awesome-simpler/lain/widget/mpd.lua	/^    function mpd.update()$/;"	f
mpd.update	.config/awesome/awesome/lain/widget/mpd.lua	/^    function mpd.update()$/;"	f
mpd.update	.config/awesome/lain/widget/mpd.lua	/^    function mpd.update()$/;"	f
mydate:buttons(awful.util.table.join(awful.button({}, 1, function () awful.spawn.with_shell("zenity --calendar --text	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^mydate:buttons(awful.util.table.join(awful.button({}, 1, function () awful.spawn.with_shell("zenity --calendar --text=") end )))$/;"	f
mydate:buttons(awful.util.table.join(awful.button({}, 1, function () awful.spawn.with_shell("zenity --calendar --text	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^mydate:buttons(awful.util.table.join(awful.button({}, 1, function () awful.spawn.with_shell("zenity --calendar --text=") end )))$/;"	f
names	.vim/autoload/plug.vim	/^function! s:names(...)$/;"	f
naughty_destroy_callback	.config/awesome/awesome/lain/util/menu_iterator.lua	/^local function naughty_destroy_callback(reason)$/;"	f
naughty_destroy_callback	.config/awesome/lain/util/menu_iterator.lua	/^local function naughty_destroy_callback(reason)$/;"	f
net.get_device	.config/awesome-simpler/lain/widget/net.lua	/^    function net.get_device()$/;"	f
net.get_device	.config/awesome/awesome/lain/widget/net.lua	/^    function net.get_device()$/;"	f
net.get_device	.config/awesome/lain/widget/net.lua	/^    function net.get_device()$/;"	f
net.update	.config/awesome-simpler/lain/widget/net.lua	/^    function net.update()$/;"	f
net.update	.config/awesome/awesome/lain/widget/net.lua	/^    function net.update()$/;"	f
net.update	.config/awesome/lain/widget/net.lua	/^    function net.update()$/;"	f
new_window	.vim/autoload/plug.vim	/^function! s:new_window()$/;"	f
num2str 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function num2str (num)$/;"	f
num2str 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function num2str (num)$/;"	f
num2str 	.config/awesome/lain/util/dkjson.lua	/^local function num2str (num)$/;"	f
nvim_cb	.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
open_script	gtypist.c	/^FILE *open_script( const char *filename )$/;"	f
optionalmetatables	.config/awesome-simpler/lain/util/dkjson.lua	/^local function optionalmetatables(...)$/;"	f
optionalmetatables	.config/awesome/awesome/lain/util/dkjson.lua	/^local function optionalmetatables(...)$/;"	f
optionalmetatables	.config/awesome/lain/util/dkjson.lua	/^local function optionalmetatables(...)$/;"	f
oscillation_template	bin/conky3/ani.lua	/^function oscillation_template()$/;"	f
oscillation_template	bin/conky3/ani.str.lua	/^function oscillation_template()$/;"	f
pacmd	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^local function pacmd(args)$/;"	f
parse	.config/awesome-simpler/vicious/contrib/btc_all.lua	/^    local function parse(response)$/;"	f
parse	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^    local function parse(str, skiprows)$/;"	f
parse_cmdline	gtypist.c	/^parse_cmdline( int argc, char **argv ) {$/;"	f	file:
parse_file	gtypist.c	/^parse_file( FILE *script, char *label ) {$/;"	f	file:
parse_options	.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parsearray 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function parsearray (str, pos, nullval, state)$/;"	f
parsearray 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function parsearray (str, pos, nullval, state)$/;"	f
parsearray 	.config/awesome/lain/util/dkjson.lua	/^  local function parsearray (str, pos, nullval, state)$/;"	f
parseobject 	.config/awesome-simpler/lain/util/dkjson.lua	/^  local function parseobject (str, pos, nullval, state)$/;"	f
parseobject 	.config/awesome/awesome/lain/util/dkjson.lua	/^  local function parseobject (str, pos, nullval, state)$/;"	f
parseobject 	.config/awesome/lain/util/dkjson.lua	/^  local function parseobject (str, pos, nullval, state)$/;"	f
path	.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
pathogen#cycle_filetype	.vim/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	.vim/autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	.vim/autoload/pathogen.vim	/^function! pathogen#expand(pattern) abort$/;"	f
pathogen#fnameescape	.vim/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	.vim/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	.vim/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	.vim/autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	.vim/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	.vim/autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	.vim/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	.vim/autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	.vim/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	.vim/autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	.vim/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	.vim/autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	.vim/autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	.vim/autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	.vim/autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	.vim/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
pfkeys	gtypist.c	/^static	char	pfkeys[ NFKEYS ] =$/;"	v	file:
pipelines	.config/awesome-simpler/freedesktop/desktop.lua	/^local function pipelines(...)$/;"	f
pipelines	.config/awesome/awesome/freedesktop/desktop.lua	/^local function pipelines(...)$/;"	f
pipelines	.config/awesome/freedesktop/desktop.lua	/^local function pipelines(...)$/;"	f
pkg_all.async	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^function pkg_all.async(format, warg, callback)$/;"	f
pkg_all.async(format, warg, function(data) ret 	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^    pkg_all.async(format, warg, function(data) ret = data end)$/;"	f
pl	.config/awesome-simpler/themes/powerarrow/theme.lua	/^local function pl(widget, bgcolor, padding)$/;"	f
pl	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^local function pl(widget, bgcolor, padding)$/;"	f
pl	.config/awesome/awesome/themes/powerarrow/theme.lua	/^local function pl(widget, bgcolor, padding)$/;"	f
pl	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^local function pl(widget, bgcolor, padding)$/;"	f
pl	.config/awesome/themes/powerarrow/theme.lua	/^local function pl(widget, bgcolor, padding)$/;"	f
plug#	.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	.vim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	.vim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plug_call	.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
plug_expand	.vim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
plug_fnamemodify	.vim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
plug_getcwd	.vim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
plug_tempname	.vim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
plug_window_exists	.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
prepare	.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
preview_commit	.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
print_help	gtypist.c	/^print_help()$/;"	f	file:
print_usage_item	gtypist.c	/^print_usage_item( char *op, char *lop, char *help,$/;"	f	file:
progress_bar	.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
pulse.update	.config/awesome/awesome/lain/widget/pulse.lua	/^    function pulse.update()$/;"	f
pulse.update	.config/awesome/lain/widget/pulse.lua	/^    function pulse.update()$/;"	f
pulse_all.add	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^function pulse_all.add(percent, sink)$/;"	f
pulse_all.toggle	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^function pulse_all.toggle(sink)$/;"	f
pulseaudio.update	.config/awesome-simpler/lain/widget/pulseaudio.lua	/^    function pulseaudio.update()$/;"	f
pulsebar.notify	.config/awesome-simpler/lain/widget/pulsebar.lua	/^    function pulsebar.notify()$/;"	f
pulsebar.notify	.config/awesome/awesome/lain/widget/pulsebar.lua	/^    function pulsebar.notify()$/;"	f
pulsebar.notify	.config/awesome/lain/widget/pulsebar.lua	/^    function pulsebar.notify()$/;"	f
pulsebar.update	.config/awesome-simpler/lain/widget/pulsebar.lua	/^    function pulsebar.update(callback)$/;"	f
pulsebar.update	.config/awesome/awesome/lain/widget/pulsebar.lua	/^    function pulsebar.update(callback)$/;"	f
pulsebar.update	.config/awesome/lain/widget/pulsebar.lua	/^    function pulsebar.update(callback)$/;"	f
put_best_speed	gtypist.c	/^void put_best_speed( const char *script_filename,$/;"	f
quake:compute_size	.config/awesome-simpler/lain/util/quake.lua	/^function quake:compute_size()$/;"	f
quake:compute_size	.config/awesome/awesome/lain/util/quake.lua	/^function quake:compute_size()$/;"	f
quake:compute_size	.config/awesome/lain/util/quake.lua	/^function quake:compute_size()$/;"	f
quake:display	.config/awesome-simpler/lain/util/quake.lua	/^function quake:display()$/;"	f
quake:display	.config/awesome/awesome/lain/util/quake.lua	/^function quake:display()$/;"	f
quake:display	.config/awesome/lain/util/quake.lua	/^function quake:display()$/;"	f
quake:new	.config/awesome-simpler/lain/util/quake.lua	/^function quake:new(config)$/;"	f
quake:new	.config/awesome/awesome/lain/util/quake.lua	/^function quake:new(config)$/;"	f
quake:new	.config/awesome/lain/util/quake.lua	/^function quake:new(config)$/;"	f
quake:toggle	.config/awesome-simpler/lain/util/quake.lua	/^function quake:toggle()$/;"	f
quake:toggle	.config/awesome/awesome/lain/util/quake.lua	/^function quake:toggle()$/;"	f
quake:toggle	.config/awesome/lain/util/quake.lua	/^function quake:toggle()$/;"	f
quotestring 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function quotestring (value)$/;"	f
quotestring 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function quotestring (value)$/;"	f
quotestring 	.config/awesome/lain/util/dkjson.lua	/^local function quotestring (value)$/;"	f
reap	.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
redshift.update_fun 	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^    redshift.update_fun = fun or function() end$/;"	f
redshift.update_fun 	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^    redshift.update_fun = fun or function() end$/;"	f
redshift.update_fun 	.config/awesome/lain/widget/contrib/redshift.lua	/^    redshift.update_fun = fun or function() end$/;"	f
redshift:attach	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^function redshift:attach(widget, fun)$/;"	f
redshift:attach	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^function redshift:attach(widget, fun)$/;"	f
redshift:attach	.config/awesome/lain/widget/contrib/redshift.lua	/^function redshift:attach(widget, fun)$/;"	f
redshift:start	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^function redshift:start()$/;"	f
redshift:start	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^function redshift:start()$/;"	f
redshift:start	.config/awesome/lain/widget/contrib/redshift.lua	/^function redshift:start()$/;"	f
redshift:toggle	.config/awesome-simpler/lain/widget/contrib/redshift.lua	/^function redshift:toggle()$/;"	f
redshift:toggle	.config/awesome/awesome/lain/widget/contrib/redshift.lua	/^function redshift:toggle()$/;"	f
redshift:toggle	.config/awesome/lain/widget/contrib/redshift.lua	/^function redshift:toggle()$/;"	f
reg.update 	.config/awesome-simpler/vicious/init.lua	/^    reg.update = function ()$/;"	f
regregister	.config/awesome-simpler/vicious/init.lua	/^local function regregister(reg)$/;"	f
regress_bar	.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
reload_plugins	.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
remove_rtp	.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_triggers	.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
reorg_rtp	.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
replace	.config/awesome-simpler/lain/util/dkjson.lua	/^local function replace(str, o, n)$/;"	f
replace	.config/awesome/awesome/lain/util/dkjson.lua	/^local function replace(str, o, n)$/;"	f
replace	.config/awesome/lain/util/dkjson.lua	/^local function replace(str, o, n)$/;"	f
reset_table	gtypist.c	/^void reset_table(){$/;"	f
retry	.vim/autoload/plug.vim	/^function! s:retry()$/;"	f
return setmetatable(ac_linux, { __call 	.config/awesome-simpler/vicious/contrib/ac_linux.lua	/^return setmetatable(ac_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(ati_linux, { __call 	.config/awesome-simpler/vicious/contrib/ati_linux.lua	/^return setmetatable(ati_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(bat_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/bat_freebsd.lua	/^return setmetatable(bat_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(bat_linux, { __call 	.config/awesome-simpler/vicious/widgets/bat_linux.lua	/^return setmetatable(bat_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(batpmu_linux, { __call 	.config/awesome-simpler/vicious/contrib/batpmu_linux.lua	/^return setmetatable(batpmu_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(batproc_linux, { __call 	.config/awesome-simpler/vicious/contrib/batproc_linux.lua	/^return setmetatable(batproc_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(calendar, { __call 	.config/awesome-simpler/lain/widget/calendar.lua	/^return setmetatable(calendar, { __call = function(_, ...) return factory(...) end })$/;"	f
return setmetatable(cmus_all, { __call 	.config/awesome-simpler/vicious/contrib/cmus_all.lua	/^return setmetatable(cmus_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(cpu_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/cpu_freebsd.lua	/^return setmetatable(cpu_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(cpu_linux, { __call 	.config/awesome-simpler/vicious/widgets/cpu_linux.lua	/^return setmetatable(cpu_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(cpufreq_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/cpufreq_freebsd.lua	/^return setmetatable(cpufreq_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(cpufreq_linux, { __call 	.config/awesome-simpler/vicious/widgets/cpufreq_linux.lua	/^return setmetatable(cpufreq_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(cpuinf_linux, { __call 	.config/awesome-simpler/vicious/widgets/cpuinf_linux.lua	/^return setmetatable(cpuinf_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(date_all, { __call 	.config/awesome-simpler/vicious/widgets/date_all.lua	/^return setmetatable(date_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(dio_linux, { __call 	.config/awesome-simpler/vicious/contrib/dio_linux.lua	/^return setmetatable(dio_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(dio_linux, { __call 	.config/awesome-simpler/vicious/widgets/dio_linux.lua	/^return setmetatable(dio_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(fanspeed_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/fanspeed_freebsd.lua	/^return setmetatable(fanspeed_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(fs_all, { __call 	.config/awesome-simpler/vicious/widgets/fs_all.lua	/^return setmetatable(fs_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(gmail_all, { __call 	.config/awesome-simpler/vicious/widgets/gmail_all.lua	/^return setmetatable(gmail_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(hddtemp_linux, { __call 	.config/awesome-simpler/vicious/widgets/hddtemp_linux.lua	/^return setmetatable(hddtemp_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(markup, { __call 	.config/awesome-simpler/lain/util/markup.lua	/^return setmetatable(markup, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
return setmetatable(markup, { __call 	.config/awesome/awesome/lain/util/markup.lua	/^return setmetatable(markup, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
return setmetatable(markup, { __call 	.config/awesome/lain/util/markup.lua	/^return setmetatable(markup, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
return setmetatable(mbox_all, { __call 	.config/awesome-simpler/vicious/widgets/mbox_all.lua	/^return setmetatable(mbox_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mboxc_all, { __call 	.config/awesome-simpler/vicious/widgets/mboxc_all.lua	/^return setmetatable(mboxc_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mdir_all, { __call 	.config/awesome-simpler/vicious/widgets/mdir_all.lua	/^return setmetatable(mdir_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mem_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/mem_freebsd.lua	/^return setmetatable(mem_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mem_linux, { __call 	.config/awesome-simpler/vicious/widgets/mem_linux.lua	/^return setmetatable(mem_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mpc_all, { __call 	.config/awesome-simpler/vicious/contrib/mpc_all.lua	/^return setmetatable(mpc_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(mpd_all, { __call 	.config/awesome-simpler/vicious/widgets/mpd_all.lua	/^return setmetatable(mpd_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(net_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/net_freebsd.lua	/^return setmetatable(net_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(net_linux, { __call 	.config/awesome-simpler/vicious/contrib/net_linux.lua	/^return setmetatable(net_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(net_linux, { __call 	.config/awesome-simpler/vicious/widgets/net_linux.lua	/^return setmetatable(net_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(netcfg, { __call 	.config/awesome-simpler/vicious/contrib/netcfg.lua	/^return setmetatable(netcfg, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(nvinf_all, { __call 	.config/awesome-simpler/vicious/contrib/nvinf_all.lua	/^return setmetatable(nvinf_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(nvsmi_all, { __call 	.config/awesome-simpler/vicious/contrib/nvsmi_all.lua	/^return setmetatable(nvsmi_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(openweather_all, { __call 	.config/awesome-simpler/vicious/contrib/openweather_all.lua	/^return setmetatable(openweather_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(org_all, { __call 	.config/awesome-simpler/vicious/widgets/org_all.lua	/^return setmetatable(org_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(os_all, { __call 	.config/awesome-simpler/vicious/widgets/os_all.lua	/^return setmetatable(os_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(ossvol_linux, { __call 	.config/awesome-simpler/vicious/contrib/ossvol_linux.lua	/^return setmetatable(ossvol_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(pkg_all, { __call 	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^return setmetatable(pkg_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(pop_all, { __call 	.config/awesome-simpler/vicious/contrib/pop_all.lua	/^return setmetatable(pop_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(pulse_all, { __call 	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^return setmetatable(pulse_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(quake, { __call 	.config/awesome-simpler/lain/util/quake.lua	/^return setmetatable(quake, { __call = function(_, ...) return quake:new(...) end })$/;"	f
return setmetatable(quake, { __call 	.config/awesome/awesome/lain/util/quake.lua	/^return setmetatable(quake, { __call = function(_, ...) return quake:new(...) end })$/;"	f
return setmetatable(quake, { __call 	.config/awesome/lain/util/quake.lua	/^return setmetatable(quake, { __call = function(_, ...) return quake:new(...) end })$/;"	f
return setmetatable(raid_linux, { __call 	.config/awesome-simpler/vicious/widgets/raid_linux.lua	/^return setmetatable(raid_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(rss_all, { __call 	.config/awesome-simpler/vicious/contrib/rss_all.lua	/^return setmetatable(rss_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(sensors_linux, { __call 	.config/awesome-simpler/vicious/contrib/sensors_linux.lua	/^return setmetatable(sensors_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(thermal_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/thermal_freebsd.lua	/^return setmetatable(thermal_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(thermal_linux, { __call 	.config/awesome-simpler/vicious/widgets/thermal_linux.lua	/^return setmetatable(thermal_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(tpbat, { __call 	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^return setmetatable(tpbat, { __call = function(_, ...) return tpbat.register(...) end })$/;"	f
return setmetatable(uptime_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/uptime_freebsd.lua	/^return setmetatable(uptime_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(uptime_linux, { __call 	.config/awesome-simpler/vicious/widgets/uptime_linux.lua	/^return setmetatable(uptime_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(volume_freebsd, { __call 	.config/awesome-simpler/vicious/widgets/volume_freebsd.lua	/^return setmetatable(volume_freebsd, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(volume_linux, { __call 	.config/awesome-simpler/vicious/widgets/volume_linux.lua	/^return setmetatable(volume_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(weather_all, { __call 	.config/awesome-simpler/vicious/widgets/weather_all.lua	/^return setmetatable(weather_all, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(wifi_linux, { __call 	.config/awesome-simpler/vicious/widgets/wifi_linux.lua	/^return setmetatable(wifi_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(wifiiw_linux, { __call 	.config/awesome-simpler/vicious/widgets/wifiiw_linux.lua	/^return setmetatable(wifiiw_linux, { __call = function(_, ...) return worker(...) end })$/;"	f
return setmetatable(wpa_all, { __call 	.config/awesome-simpler/vicious/contrib/wpa_all.lua	/^return setmetatable(wpa_all, { __call = function(_, ...) return worker(...) end })$/;"	f
revert	.vim/autoload/plug.vim	/^function! s:revert()$/;"	f
rgb_to_r_g_b	bin/conky/clock_rings.lua	/^function rgb_to_r_g_b(colour,alpha)$/;"	f
rgb_to_r_g_b	bin/conky2/lua.lua	/^ function rgb_to_r_g_b(colour,alpha)$/;"	f
rgb_to_r_g_b	bin/conky3/clock_rings.str.lua	/^function rgb_to_r_g_b(colour,alpha)$/;"	f
rm_rf	.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rtp	.vim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
run_once	.config/awesome/awesome/rc.lua	/^local function run_once(cmd_arr)$/;"	f
run_once	.config/awesome/rc.lua	/^local function run_once(cmd_arr)$/;"	f
s) beautiful.at_screen_connect	.config/awesome/awesome/rc.lua	/^awful.screen.connect_for_each_screen(function(s) beautiful.at_screen_connect(s) end)$/;"	f
s) beautiful.at_screen_connect	.config/awesome/rc.lua	/^awful.screen.connect_for_each_screen(function(s) beautiful.at_screen_connect(s) end)$/;"	f
s:TYPE	.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:base_spec	.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:cpo_save	.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:done_bundles	.vim/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:first_rtp	.vim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:is_win	.vim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:last_rtp	.vim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:loaded	.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:mac_gui	.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:me	.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:nvim	.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:plug_buf	.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:triggers	.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:vim8	.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vopen_warning	.vim/autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	v
safepipe	.config/ranger/scope.sh	/^safepipe() { "$@"; test $? = 0 -o $? = 141; }$/;"	f
scanstring 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function scanstring (str, pos)$/;"	f
scanstring 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function scanstring (str, pos)$/;"	f
scanstring 	.config/awesome/lain/util/dkjson.lua	/^local function scanstring (str, pos)$/;"	f
scantable 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function scantable (what, closechar, str, startpos, nullval, objectmeta, arraymeta)$/;"	f
scantable 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function scantable (what, closechar, str, startpos, nullval, objectmeta, arraymeta)$/;"	f
scantable 	.config/awesome/lain/util/dkjson.lua	/^local function scantable (what, closechar, str, startpos, nullval, objectmeta, arraymeta)$/;"	f
scanvalue 	.config/awesome-simpler/lain/util/dkjson.lua	/^scanvalue = function (str, pos, nullval, objectmeta, arraymeta)$/;"	f
scanvalue 	.config/awesome/awesome/lain/util/dkjson.lua	/^scanvalue = function (str, pos, nullval, objectmeta, arraymeta)$/;"	f
scanvalue 	.config/awesome/lain/util/dkjson.lua	/^scanvalue = function (str, pos, nullval, objectmeta, arraymeta)$/;"	f
scanwhite 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function scanwhite (str, pos)$/;"	f
scanwhite 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function scanwhite (str, pos)$/;"	f
scanwhite 	.config/awesome/lain/util/dkjson.lua	/^local function scanwhite (str, pos)$/;"	f
section	.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
separators.arrow_left	.config/awesome-simpler/lain/util/separators.lua	/^function separators.arrow_left(col1, col2)$/;"	f
separators.arrow_left	.config/awesome/awesome/lain/util/separators.lua	/^function separators.arrow_left(col1, col2)$/;"	f
separators.arrow_left	.config/awesome/lain/util/separators.lua	/^function separators.arrow_left(col1, col2)$/;"	f
separators.arrow_right	.config/awesome-simpler/lain/util/separators.lua	/^function separators.arrow_right(col1, col2)$/;"	f
separators.arrow_right	.config/awesome/awesome/lain/util/separators.lua	/^function separators.arrow_right(col1, col2)$/;"	f
separators.arrow_right	.config/awesome/lain/util/separators.lua	/^function separators.arrow_right(col1, col2)$/;"	f
set_wallpaper	.config/awesome/rc.lua	/^local function set_wallpaper(s)$/;"	f
setmetatable(_M, { __call 	.config/awesome-simpler/osk.lua	/^setmetatable(_M, { __call = function (_, pos, scr)$/;"	f
setmetatable(buildbot_all, { __call 	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^setmetatable(buildbot_all, { __call = function(_, ...) return worker(...) end })$/;"	f
setmetatable(countfiles_all, { __call 	.config/awesome-simpler/vicious/contrib/countfiles_all.lua	/^setmetatable(countfiles_all, { __call = function(_, ...) return worker(...) end })$/;"	f
setmetatable(markup.bg, { __call 	.config/awesome-simpler/lain/util/markup.lua	/^setmetatable(markup.bg, { __call = function(_, ...) return markup.bg.color(...) end })$/;"	f
setmetatable(markup.bg, { __call 	.config/awesome/awesome/lain/util/markup.lua	/^setmetatable(markup.bg, { __call = function(_, ...) return markup.bg.color(...) end })$/;"	f
setmetatable(markup.bg, { __call 	.config/awesome/lain/util/markup.lua	/^setmetatable(markup.bg, { __call = function(_, ...) return markup.bg.color(...) end })$/;"	f
setmetatable(markup.fg, { __call 	.config/awesome-simpler/lain/util/markup.lua	/^setmetatable(markup.fg, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
setmetatable(markup.fg, { __call 	.config/awesome/awesome/lain/util/markup.lua	/^setmetatable(markup.fg, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
setmetatable(markup.fg, { __call 	.config/awesome/lain/util/markup.lua	/^setmetatable(markup.fg, { __call = function(_, ...) return markup.fg.color(...) end })$/;"	f
settings 	.config/awesome-simpler/themes/blackburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/copland/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/dep/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/depvicious/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/dremora/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/holo/theme.lua	/^    settings = function ()$/;"	f
settings 	.config/awesome-simpler/themes/holo/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/multicolor/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/powerarrow-dark/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/powerarrow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/rainbow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/steamburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/vertex/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/yoga/dep/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome-simpler/themes/yoga/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/blackburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/copland/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/dremora/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/holo/theme.lua	/^    settings = function ()$/;"	f
settings 	.config/awesome/awesome/themes/holo/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/multicolor/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/powerarrow-dark/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^       settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/powerarrow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/rainbow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/steamburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/awesome/themes/vertex/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/blackburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/copland/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/dremora/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/holo/theme.lua	/^    settings = function ()$/;"	f
settings 	.config/awesome/themes/holo/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/multicolor/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/powerarrow-dark/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^       settings = function()$/;"	f
settings 	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/powerarrow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/rainbow/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/steamburn/theme.lua	/^    settings = function()$/;"	f
settings 	.config/awesome/themes/vertex/theme.lua	/^    settings = function()$/;"	f
settings  	.config/awesome-simpler/themes/blackburn/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/copland/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/dep/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/depvicious/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/dremora/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/multicolor/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/rainbow/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/yoga/dep/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome-simpler/themes/yoga/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/awesome/themes/blackburn/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/awesome/themes/copland/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/awesome/themes/dremora/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/awesome/themes/multicolor/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/awesome/themes/rainbow/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/themes/blackburn/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/themes/copland/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/themes/dremora/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/themes/multicolor/theme.lua	/^    settings  = function()$/;"	f
settings  	.config/awesome/themes/rainbow/theme.lua	/^    settings  = function()$/;"	f
setup_rings	bin/conky/clock_rings.lua	/^	local function setup_rings(cr,pt)$/;"	f
setup_rings	bin/conky2/lua.lua	/^         local function setup_rings(cr,pt)$/;"	f
setup_rings	bin/conky3/clock_rings.str.lua	/^	local function setup_rings(cr,pt)$/;"	f
shellesc_cmd	.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
shellesc_ps1	.vim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
shellesc_sh	.vim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
show_app_data	bin/conky3/ani.str.lua	/^function show_app_data(j,v)$/;"	f
show_cpu_data	bin/conky3/ani.lua	/^function show_cpu_data(j,v)$/;"	f
show_cpu_data	bin/conky3/ani.str.lua	/^function show_cpu_data(j,v)$/;"	f
show_text	bin/conky3/ani.lua	/^function show_text(x,y,content)$/;"	f
show_text	bin/conky3/ani.str.lua	/^function show_text(x,y,content)$/;"	f
smapi:battery	.config/awesome-simpler/lain/widget/contrib/tpbat/smapi.lua	/^function smapi:battery(name)$/;"	f
snapshot	.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
source	.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
spawn	.vim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
split_rtp	.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
status	.vim/autoload/plug.vim	/^function! s:status()$/;"	f
status_load	.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
stdout 	.config/awesome/awesome/lain/helpers.lua	/^        stdout = function (line)$/;"	f
stdout 	.config/awesome/lain/helpers.lua	/^        stdout = function (line)$/;"	f
stdout) callback	.config/awesome-simpler/vicious/contrib/btc_all.lua	/^    spawn.easy_async(cmd, function(stdout) callback(parse(stdout)) end)$/;"	f
stdout) callback	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^    spawn.easy_async(_pkg.cmd, function(stdout) callback(parse(stdout, _pkg.sub)) end)$/;"	f
str2num 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function str2num (str)$/;"	f
str2num 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function str2num (str)$/;"	f
str2num 	.config/awesome/lain/util/dkjson.lua	/^local function str2num (str)$/;"	f
switch_in	.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
syntax	.vim/autoload/plug.vim	/^function! s:syntax()$/;"	f
sysload.update	.config/awesome-simpler/lain/widget/sysload.lua	/^    function sysload.update()$/;"	f
sysload.update	.config/awesome/awesome/lain/widget/sysload.lua	/^    function sysload.update()$/;"	f
sysload.update	.config/awesome/lain/widget/sysload.lua	/^    function sysload.update()$/;"	f
system	.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system_chomp	.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
t) awful.tag.viewnext	.config/awesome/awesome/rc.lua	/^    awful.button({ }, 4, function(t) awful.tag.viewnext(t.screen) end),$/;"	f
t) awful.tag.viewnext	.config/awesome/rc.lua	/^    awful.button({ }, 4, function(t) awful.tag.viewnext(t.screen) end),$/;"	f
t) awful.tag.viewprev	.config/awesome/awesome/rc.lua	/^    awful.button({ }, 5, function(t) awful.tag.viewprev(t.screen) end)$/;"	f
t) awful.tag.viewprev	.config/awesome/rc.lua	/^    awful.button({ }, 5, function(t) awful.tag.viewprev(t.screen) end)$/;"	f
t) t:view_only	.config/awesome/awesome/rc.lua	/^    awful.button({ }, 1, function(t) t:view_only() end),$/;"	f
t) t:view_only	.config/awesome/rc.lua	/^    awful.button({ }, 1, function(t) t:view_only() end),$/;"	f
tabl	gtypist.c	/^} tabl;$/;"	t	typeref:struct:__anon1	file:
task.attach	.config/awesome-simpler/lain/widget/contrib/task.lua	/^function task.attach(widget, args)$/;"	f
task.attach	.config/awesome/awesome/lain/widget/contrib/task.lua	/^function task.attach(widget, args)$/;"	f
task.attach	.config/awesome/lain/widget/contrib/task.lua	/^function task.attach(widget, args)$/;"	f
task.hide	.config/awesome-simpler/lain/widget/contrib/task.lua	/^function task.hide()$/;"	f
task.hide	.config/awesome/awesome/lain/widget/contrib/task.lua	/^function task.hide()$/;"	f
task.hide	.config/awesome/lain/widget/contrib/task.lua	/^function task.hide()$/;"	f
task.prompt	.config/awesome-simpler/lain/widget/contrib/task.lua	/^function task.prompt()$/;"	f
task.prompt	.config/awesome/awesome/lain/widget/contrib/task.lua	/^function task.prompt()$/;"	f
task.prompt	.config/awesome/lain/widget/contrib/task.lua	/^function task.prompt()$/;"	f
task.show	.config/awesome-simpler/lain/widget/contrib/task.lua	/^function task.show(scr)$/;"	f
task.show	.config/awesome/awesome/lain/widget/contrib/task.lua	/^function task.show(scr)$/;"	f
task.show	.config/awesome/lain/widget/contrib/task.lua	/^function task.show(scr)$/;"	f
temp.update	.config/awesome-simpler/lain/widget/temp.lua	/^    function temp.update()$/;"	f
temp.update	.config/awesome/awesome/lain/widget/temp.lua	/^    function temp.update()$/;"	f
temp.update	.config/awesome/lain/widget/temp.lua	/^    function temp.update()$/;"	f
temw	bin/conky3/ani.lua	/^	temw= (angular_width\/(2*math.pi)) - 1			-- Used Gaussian function translated to (1,0) instead of sin, so it's never zero better increment$/;"	f
termfair.arrange	.config/awesome-simpler/lain/layout/termfair.lua	/^function termfair.arrange(p)$/;"	f
termfair.arrange	.config/awesome/awesome/lain/layout/termfair.lua	/^function termfair.arrange(p)$/;"	f
termfair.arrange	.config/awesome/lain/layout/termfair.lua	/^function termfair.arrange(p)$/;"	f
termfair.center.arrange	.config/awesome-simpler/lain/layout/termfair.lua	/^function termfair.center.arrange(p)$/;"	f
termfair.center.arrange	.config/awesome/awesome/lain/layout/termfair.lua	/^function termfair.center.arrange(p)$/;"	f
termfair.center.arrange	.config/awesome/lain/layout/termfair.lua	/^function termfair.center.arrange(p)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/new/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/blackburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/copland/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/dep/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/depvicious/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/dremora/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/holo/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/multicolor/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/powerarrow-dark/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/powerarrow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/rainbow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/steamburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/vertex/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/yoga/dep/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome-simpler/themes/yoga/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/blackburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/copland/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/dremora/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/holo/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/multicolor/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/powerarrow-dark/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/powerarrow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/rainbow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/steamburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/awesome/themes/vertex/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/blackburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/copland/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/dremora/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/holo/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/multicolor/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/powerarrow-dark/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/powerarrow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/rainbow/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/steamburn/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.at_screen_connect	.config/awesome/themes/vertex/theme.lua	/^function theme.at_screen_connect(s)$/;"	f
theme.powerline_rl	.config/awesome-simpler/themes/powerarrow/theme.lua	/^function theme.powerline_rl(cr, width, height)$/;"	f
theme.powerline_rl	.config/awesome/awesome/themes/powerarrow/theme-debdeep.lua	/^function theme.powerline_rl(cr, width, height)$/;"	f
theme.powerline_rl	.config/awesome/awesome/themes/powerarrow/theme.lua	/^function theme.powerline_rl(cr, width, height)$/;"	f
theme.powerline_rl	.config/awesome/themes/powerarrow/theme-debdeep.lua	/^function theme.powerline_rl(cr, width, height)$/;"	f
theme.powerline_rl	.config/awesome/themes/powerarrow/theme.lua	/^function theme.powerline_rl(cr, width, height)$/;"	f
theme.vertical_wibox	.config/awesome-simpler/themes/vertex/theme.lua	/^function theme.vertical_wibox(s)$/;"	f
theme.vertical_wibox	.config/awesome/awesome/themes/vertex/theme.lua	/^function theme.vertical_wibox(s)$/;"	f
theme.vertical_wibox	.config/awesome/themes/vertex/theme.lua	/^function theme.vertical_wibox(s)$/;"	f
tick	.vim/autoload/plug.vim	/^function! s:tick()$/;"	f
to_a	.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_s	.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
tp_smapi.create_widget	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.create_widget(args)$/;"	f
tp_smapi.create_widget	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.create_widget(args)$/;"	f
tp_smapi.get	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.get(batid, feature)$/;"	f
tp_smapi.get	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.get(batid, feature)$/;"	f
tp_smapi.hide	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.hide()$/;"	f
tp_smapi.hide	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.hide()$/;"	f
tp_smapi.installed	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.installed(batid)$/;"	f
tp_smapi.installed	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.installed(batid)$/;"	f
tp_smapi.percentage	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.percentage(batid)$/;"	f
tp_smapi.percentage	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.percentage(batid)$/;"	f
tp_smapi.show	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.show(batid, seconds, scr)$/;"	f
tp_smapi.show	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.show(batid, seconds, scr)$/;"	f
tp_smapi.status	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.status(batid)$/;"	f
tp_smapi.status	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.status(batid)$/;"	f
tp_smapi.time	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.time(batid)$/;"	f
tp_smapi.time	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^    function tp_smapi.time(batid)$/;"	f
tpbat.hide	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^function tpbat.hide()$/;"	f
tpbat.register	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^function tpbat.register(args)$/;"	f
tpbat.show	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^function tpbat.show(t_out)$/;"	f
tpbat.update	.config/awesome-simpler/lain/widget/contrib/tpbat/init.lua	/^    function tpbat.update()$/;"	f
tpbat.update	.config/awesome/awesome/lain/widget/contrib/tp_smapi.lua	/^        function tpbat.update()$/;"	f
tpbat.update	.config/awesome/lain/widget/contrib/tp_smapi.lua	/^        function tpbat.update()$/;"	f
trim	.config/ranger/scope.sh	/^trim() { head -n "$maxln"; }$/;"	f
trim	.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
try	.config/ranger/scope.sh	/^try() { output=$(eval '"$@"'); }$/;"	f
unichar 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function unichar (value)$/;"	f
unichar 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function unichar (value)$/;"	f
unichar 	.config/awesome/lain/util/dkjson.lua	/^local function unichar (value)$/;"	f
unterminated 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function unterminated (str, what, where)$/;"	f
unterminated 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function unterminated (str, what, where)$/;"	f
unterminated 	.config/awesome/lain/util/dkjson.lua	/^local function unterminated (str, what, where)$/;"	f
update	.config/awesome-simpler/lain/widget/imap.lua	/^    function update()$/;"	f
update	.config/awesome-simpler/vicious/init.lua	/^local function update(widget, reg, disablecache)$/;"	f
update	.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
update_finish	.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_impl	.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_python	.vim/autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_txt_layoutbox	.config/awesome-simpler/themes/rainbow/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_txt_layoutbox	.config/awesome-simpler/themes/steamburn/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_txt_layoutbox	.config/awesome/awesome/themes/rainbow/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_txt_layoutbox	.config/awesome/awesome/themes/steamburn/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_txt_layoutbox	.config/awesome/themes/rainbow/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_txt_layoutbox	.config/awesome/themes/steamburn/theme.lua	/^local function update_txt_layoutbox(s)$/;"	f
update_value	.config/awesome-simpler/vicious/init.lua	/^    local function update_value(data, t, cache)$/;"	f
update_vim	.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
updatedecpoint 	.config/awesome-simpler/lain/util/dkjson.lua	/^local function updatedecpoint ()$/;"	f
updatedecpoint 	.config/awesome/awesome/lain/util/dkjson.lua	/^local function updatedecpoint ()$/;"	f
updatedecpoint 	.config/awesome/lain/util/dkjson.lua	/^local function updatedecpoint ()$/;"	f
upgrade	.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
usage	.myscr/awf	/^function usage() $/;"	f
user_is_always_sure	gtypist.c	/^static bool user_is_always_sure = FALSE;$/;"	v	file:
util.add_tag	.config/awesome-simpler/lain/util/init.lua	/^function util.add_tag(layout)$/;"	f
util.add_tag	.config/awesome/awesome/lain/util/init.lua	/^function util.add_tag(layout)$/;"	f
util.add_tag	.config/awesome/lain/util/init.lua	/^function util.add_tag(layout)$/;"	f
util.delete_tag	.config/awesome-simpler/lain/util/init.lua	/^function util.delete_tag()$/;"	f
util.delete_tag	.config/awesome/awesome/lain/util/init.lua	/^function util.delete_tag()$/;"	f
util.delete_tag	.config/awesome/lain/util/init.lua	/^function util.delete_tag()$/;"	f
util.magnify_client	.config/awesome-simpler/lain/util/init.lua	/^function util.magnify_client(c, width_f, height_f)$/;"	f
util.magnify_client	.config/awesome/awesome/lain/util/init.lua	/^function util.magnify_client(c, width_f, height_f)$/;"	f
util.magnify_client	.config/awesome/lain/util/init.lua	/^function util.magnify_client(c, width_f, height_f)$/;"	f
util.mc	.config/awesome-simpler/lain/util/init.lua	/^function util.mc(c, width_f, height_f)$/;"	f
util.mc	.config/awesome/awesome/lain/util/init.lua	/^function util.mc(c, width_f, height_f)$/;"	f
util.mc	.config/awesome/lain/util/init.lua	/^function util.mc(c, width_f, height_f)$/;"	f
util.menu_clients_current_tags	.config/awesome-simpler/lain/util/init.lua	/^function util.menu_clients_current_tags(menu, args)$/;"	f
util.menu_clients_current_tags	.config/awesome/awesome/lain/util/init.lua	/^function util.menu_clients_current_tags(menu, args)$/;"	f
util.menu_clients_current_tags	.config/awesome/lain/util/init.lua	/^function util.menu_clients_current_tags(menu, args)$/;"	f
util.move_tag	.config/awesome-simpler/lain/util/init.lua	/^function util.move_tag(pos)$/;"	f
util.move_tag	.config/awesome/awesome/lain/util/init.lua	/^function util.move_tag(pos)$/;"	f
util.move_tag	.config/awesome/lain/util/init.lua	/^function util.move_tag(pos)$/;"	f
util.rename_tag	.config/awesome-simpler/lain/util/init.lua	/^function util.rename_tag()$/;"	f
util.rename_tag	.config/awesome/awesome/lain/util/init.lua	/^function util.rename_tag()$/;"	f
util.rename_tag	.config/awesome/lain/util/init.lua	/^function util.rename_tag()$/;"	f
util.tag_view_nonempty	.config/awesome-simpler/lain/util/init.lua	/^function util.tag_view_nonempty(direction, sc)$/;"	f
util.tag_view_nonempty	.config/awesome/awesome/lain/util/init.lua	/^function util.tag_view_nonempty(direction, sc)$/;"	f
util.tag_view_nonempty	.config/awesome/lain/util/init.lua	/^function util.tag_view_nonempty(direction, sc)$/;"	f
util.useless_gaps_resize	.config/awesome-simpler/lain/util/init.lua	/^function util.useless_gaps_resize(thatmuch)$/;"	f
util.useless_gaps_resize	.config/awesome/awesome/lain/util/init.lua	/^function util.useless_gaps_resize(thatmuch, s, t)$/;"	f
util.useless_gaps_resize	.config/awesome/lain/util/init.lua	/^function util.useless_gaps_resize(thatmuch, s, t)$/;"	f
version_requirement	.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
vicious.activate	.config/awesome-simpler/vicious/init.lua	/^function vicious.activate(widget)$/;"	f
vicious.cache	.config/awesome-simpler/vicious/init.lua	/^function vicious.cache(wtype)$/;"	f
vicious.call	.config/awesome-simpler/vicious/init.lua	/^function vicious.call(myw, format, warg)$/;"	f
vicious.force	.config/awesome-simpler/vicious/init.lua	/^function vicious.force(wtable)$/;"	f
vicious.register	.config/awesome-simpler/vicious/init.lua	/^function vicious.register(widget, wtype, format, timer, warg)$/;"	f
vicious.suspend	.config/awesome-simpler/vicious/init.lua	/^function vicious.suspend()$/;"	f
vicious.unregister	.config/awesome-simpler/vicious/init.lua	/^function vicious.unregister(widget, keep, reg)$/;"	f
wait_user	gtypist.c	/^static bool wait_user (FILE *script, char *message, char *mode)$/;"	f	file:
warn	.vim/autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
warn	.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
weather.attach	.config/awesome-simpler/lain/widget/weather.lua	/^    function weather.attach(obj)$/;"	f
weather.attach	.config/awesome/awesome/lain/widget/weather.lua	/^    function weather.attach(obj)$/;"	f
weather.attach	.config/awesome/lain/widget/weather.lua	/^    function weather.attach(obj)$/;"	f
weather.forecast_update	.config/awesome-simpler/lain/widget/weather.lua	/^    function weather.forecast_update()$/;"	f
weather.forecast_update	.config/awesome/awesome/lain/widget/weather.lua	/^    function weather.forecast_update()$/;"	f
weather.forecast_update	.config/awesome/lain/widget/weather.lua	/^    function weather.forecast_update()$/;"	f
weather.hide	.config/awesome-simpler/lain/widget/weather.lua	/^    function weather.hide()$/;"	f
weather.hide	.config/awesome/awesome/lain/widget/weather.lua	/^    function weather.hide()$/;"	f
weather.hide	.config/awesome/lain/widget/weather.lua	/^    function weather.hide()$/;"	f
weather.show	.config/awesome-simpler/lain/widget/weather.lua	/^    function weather.show(t_out)$/;"	f
weather.show	.config/awesome/awesome/lain/widget/weather.lua	/^    function weather.show(t_out)$/;"	f
weather.show	.config/awesome/lain/widget/weather.lua	/^    function weather.show(t_out)$/;"	f
weather.update	.config/awesome-simpler/lain/widget/weather.lua	/^    function weather.update()$/;"	f
weather.update	.config/awesome/awesome/lain/widget/weather.lua	/^    function weather.update()$/;"	f
weather.update	.config/awesome/lain/widget/weather.lua	/^    function weather.update()$/;"	f
widget.draw 	.config/awesome-simpler/lain/util/separators.lua	/^    widget.draw = function(mycross, wibox, cr, width, height)$/;"	f
widget.draw 	.config/awesome/awesome/lain/util/separators.lua	/^    widget.draw = function(mycross, wibox, cr, width, height)$/;"	f
widget.draw 	.config/awesome/lain/util/separators.lua	/^    widget.draw = function(mycross, wibox, cr, width, height)$/;"	f
widget.fit 	.config/awesome-simpler/lain/util/separators.lua	/^    widget.fit = function(m, w, h)$/;"	f
widget.fit 	.config/awesome/awesome/lain/util/separators.lua	/^    widget.fit = function(m, w, h)$/;"	f
widget.fit 	.config/awesome/lain/util/separators.lua	/^    widget.fit = function(m, w, h)$/;"	f
widget.update 	.config/awesome/awesome/lain/util/separators.lua	/^    widget.update = function(col1, col2)$/;"	f
widget.update 	.config/awesome/lain/util/separators.lua	/^    widget.update = function(col1, col2)$/;"	f
with_cd	.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/ac_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/ati_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/batpmu_linux.lua	/^local function worker(format, batid)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/batproc_linux.lua	/^local function worker(format, batid)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/buildbot_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/cmus_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/countfiles_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/dio_linux.lua	/^local function worker(format, disk)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/mpc_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/net_linux.lua	/^local function worker(format, tignorelist)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/netcfg.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/nvinf_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/nvsmi_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/openweather_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/ossvol_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/pop_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/pulse_all.lua	/^local function worker(format, sink)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/rss_all.lua	/^local function worker(format, input)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/sensors_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/contrib/wpa_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/bat_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/bat_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/cpu_freebsd.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/cpu_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/cpufreq_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/cpufreq_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/cpuinf_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/date_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/dio_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/fanspeed_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/fs_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/gmail_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/hddtemp_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mbox_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mboxc_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mdir_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mem_freebsd.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mem_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/mpd_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/net_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/net_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/org_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/os_all.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/pkg_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/raid_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/thermal_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/thermal_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/uptime_freebsd.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/uptime_linux.lua	/^local function worker(format)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/volume_freebsd.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/volume_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/weather_all.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/wifi_linux.lua	/^local function worker(format, warg)$/;"	f
worker	.config/awesome-simpler/vicious/widgets/wifiiw_linux.lua	/^local function worker(format, warg)$/;"	f
wrap_cmds	.vim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
writetofile	gtypist.c	/^void writetofile()$/;"	f
xephyr_pid	.myscr/awf	/^function xephyr_pid()$/;"	f
{ __index 	.config/awesome-simpler/vicious/helpers.lua	/^        { __index = function(table, index)$/;"	f
